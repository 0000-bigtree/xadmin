# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, sshwsfc
# This file is distributed under the same license as the Django Xadmin package.
# 
# Translators:
# Chris <chris.tyrion@gmail.com>, 2014
# Jove Yu <yushijun110@gmail.com>, 2013
# Peter dkdndes <dkdndes@gmail.com>, 2013
# zhangxiang <phenixgeorge@126.com>, 2013
msgid ""
msgstr ""
"Project-Id-Version: xadmin-docs\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-06-27 16:52+0800\n"
"PO-Revision-Date: 2014-06-27 08:56+0000\n"
"Last-Translator: sshw <sshwsfc@gmail.com>\n"
"Language-Team: English (http://www.transifex.com/projects/p/xadmin-docs/language/en/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: en\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# 8ded98d3abc54a438fd9af212735fd43
#: ../../site_api.rst:2
msgid "AdminSite"
msgstr "Admin Site"

# fa030c9f61ca482981bd964a3fff77fb
#: ../../../xadmin/sites.pydocstring of xadmin.sites.AdminSite:1
msgid "xadmin最核心的类，管理整个xadmin站点的所有注册内容。"
msgstr "The core of xadmin, managing all the register contents of xadmin."

# cc8f4c9f27174112bb227003e7fe05ca
#: ../../../xadmin/sites.pydocstring of xadmin.sites.AdminSite:3
msgid "一般一个管理站点只有一个 ``AdminSite`` 实例，该实例主要完成以下工作:"
msgstr "In general there is only one instance of AdminSite within a managed site,  and this AdminSite instance is responsible for the following tasks:"

# 8927ec03542e4f3fba1667f37c64e398
#: ../../../xadmin/sites.pydocstring of xadmin.sites.AdminSite:5
msgid "注册管理所有 xadmin 需要的信息"
msgstr "register and manage all information required by xadmin"

# 71dc01525a4047398212769b67988c8b
#: ../../../xadmin/sites.pydocstring of xadmin.sites.AdminSite:6
msgid "创建 ``admin view class``"
msgstr "create ``admin view class``"

# 024fedbdc4fc4e8787c71719a4c99d9f
#: ../../../xadmin/sites.pydocstring of xadmin.sites.AdminSite:7
msgid "注册 django urls"
msgstr "registered urls in django"

# f8f9719077684e0d8c709f2dcdc9bc17
#: ../../../xadmin/sites.pydocstring of xadmin.sites.AdminSite:9
msgid "其中，xadmin 需要的信息包括以下信息："
msgstr "xadmin required information includes:"

# a87920f608664166b4e65fdc8448b5fb
#: ../../../xadmin/sites.pydocstring of xadmin.sites.AdminSite:11
msgid "需要 xadmin 管理的 models，以及各 model 的 admin 信息"
msgstr "the models need to be managed by xadmin and all information about the admin settings in the models"

# b4663000b4fa4f7b996c303405064eb7
#: ../../../xadmin/sites.pydocstring of xadmin.sites.AdminSite:12
msgid "注册的 ``admin view class``"
msgstr "registered 'admin view class'"

# 8d66b0cd284a439ab252cc607c96ed6c
#: ../../../xadmin/sites.pydocstring of xadmin.sites.AdminSite:13
msgid "注册的 ``model admin view class``"
msgstr "registered 'model admin view class'"

# 17318bd615604357a0793866fc9e812d
#: ../../../xadmin/sites.pydocstring of xadmin.sites.AdminSite:14
msgid "注册的各种插件"
msgstr "all registered plugins"

# 9d5d6758c0dc4619aa2e0a39c605fe70
#: ../../../xadmin/sites.pydocstring of xadmin.sites.AdminSite.admin_view:1
msgid ""
"为当前 ``AdminSite`` 的所有 View 提供的 Decorator。主要是功能是使用 "
":meth:`AdminSite.has_permission`  方法来判断当前用户是否有权限访问该 ``AdminSite``， "
"如果没有，转到登陆页面"
msgstr "provide Decorator to all Views in the current AdminSite. Use has_permission method of AdminSite to check whether the current user has privilege to access the AdminSite, and redirect to login page if not. "

# 60cb53a07fbc4196a72ea8b32ed97b06
#: ../../../xadmin/sites.pydocstring of xadmin.sites.AdminSite.admin_view:4
msgid "通常情况下会在 :meth:`AdminSite.get_urls` 方法中使用该方法"
msgstr "it will be called inside the get_urls method of AdminSite"

# 04dc44002d6d4c3c8154015fc363e3b9
#: ../../../xadmin/sites.pydocstring of xadmin.sites.AdminSite.admin_view:6
msgid ""
"默认情况下，所有的 AdminView 会通过 ``never_cache`` 标记成不做缓存，如果确实需要缓存，可以设置 cacheable=True"
msgstr ""

# c48570b04f694cbaad52ad728b073dbc
#: ../../../xadmin/sites.pydocstring of
#: xadmin.sites.AdminSite.check_dependencies:1
msgid "检查运行xadmin需要的包是否已经正确安装"
msgstr "check the packages on that the xadmin depends whether are installed correctly."

# 2d9dd2ec53d74f979eba568d193cce83
#: ../../../xadmin/sites.pydocstring of
#: xadmin.sites.AdminSite.check_dependencies:3
msgid "默认情况下会检查 *ContentType* 模块是否已经正确安装"
msgstr "In default, the *ContentType* module will be checked to see whether it is installed correctly"

# f1dcb038fffd465db2faacf80728e8ae
#: ../../../xadmin/sites.pydocstring of xadmin.sites.AdminSite.copy_registry:1
msgid "复制当前 AdminSite 实例的信息"
msgstr "copy the information of the current AdminSite instance"

# 591ef39db1254f09b52749c46e63a833
#: ../../../xadmin/sites.pydocstring of
#: xadmin.sites.AdminSite.create_admin_view:1
msgid ""
"使用 :meth:`~AdminSite.get_view_class` 创建 AdminView 类，并且返回 view 方法，可以用于 "
"get_urls 方法中"
msgstr "use the get_view_class method of AdminSite to create AdminView class and return view method which can be called by the get_urls method"

# 414e229d421d450683c47c5753233968
#: ../../../xadmin/sites.pydocstring of
#: xadmin.sites.AdminSite.create_admin_view:3
msgid "AdminView 类"
msgstr ""

# 8b8ebeb5fe5b47c687688e170ec94dd4
#: ../../../xadmin/sites.pydocstring of
#: xadmin.sites.AdminSite.create_model_admin_view:1
msgid ""
"使用 :meth:`~AdminSite.get_view_class` 创建 ModelAdminView 类，并且返回 view 方法，可以用于 "
"get_urls 方法中"
msgstr "use get_view_class method of AdminSite to create ModelAdminView and return view method, which can be call by get_urls method"

# c8f532fb10f342818094369cb6c8d602
#: ../../../xadmin/sites.pydocstring of
#: xadmin.sites.AdminSite.create_model_admin_view:3
msgid "AdminView 类，该类应该为 :class:`~xadmin.views.base.ModelAdminView` 的子类"
msgstr ""

# 021e3a734903497c9ce2c98df3c1b62f
#: ../../../xadmin/sites.pydocstring of
#: xadmin.sites.AdminSite.create_model_admin_view:4
msgid "Model 类，目前该参数暂无作用"
msgstr ""

# e244ac3b97884bfd9975124cc60f765c
#: ../../../xadmin/sites.pydocstring of
#: xadmin.sites.AdminSite.create_model_admin_view:5
msgid "Model 的 OptionClass，保存对该 Model 的相关定制"
msgstr ""

# fff510141de74863b06aac0aa59c331e
#: ../../../xadmin/sites.pydocstring of xadmin.sites.AdminSite.get_plugins:1
msgid "xadmin中 **核心** 方法，用于获取 AdminViewClass 的 plugins。"
msgstr "the core method of xadmin is used to get the plugins from AdminViewClass"

# 25e93aaff37f4ff2bea092450c0b9973
#: ../../../xadmin/sites.pydocstring of xadmin.sites.AdminSite.get_plugins:3
msgid ""
"获取 plugins 首先根据该 AdminViewClass 及其所有的集成类在已经注册的插件中找到相应的插件类。然后再使用第二个参数的 "
"OptionClass 拼成插件类。"
msgstr "to obtain the plugin instances, first find the corresponding plugin classes registered to this AdminView class and all other integrated classes, then apply the OptionClass of the second parameter."

# bf7ee72863f74e7cab8d26cdcc4334d5
#: ../../../xadmin/sites.pydocstring of
#: xadmin.sites.AdminSite.get_view_class:1
msgid "xadmin中 **最核心** 的方法，用于创建 xadmin 特有的 AdminViewClass。"
msgstr "the most core method of xadmin is used to create specific AdminViewClass that belongs to xadmin"

# d09f902d14a44dc7871ec321e63b81b0
#: ../../../xadmin/sites.pydocstring of
#: xadmin.sites.AdminSite.get_view_class:3
msgid "创建 AdminView 和核心思想为动态生成 mix 的类，主要步骤有两步:"
msgstr "there are two steps of creating AdminView class instance and dynamically generating the mix class"

# ecdc001197134f6cbd9863dd3eacf7da
#: ../../../xadmin/sites.pydocstring of
#: xadmin.sites.AdminSite.get_view_class:5
msgid ""
"使用已经注册的 OptionClass (见 :meth:`~register`) 以及参数传入的 option_class 与 view_class "
"动态生成类"
msgstr "use the registered OptionClass (see method register), the option_class parameter and the view_class to dynamically create the class instance"

# 0469ddb8adaa4731b6d838e0d47e8fee
#: ../../../xadmin/sites.pydocstring of
#: xadmin.sites.AdminSite.get_view_class:6
msgid "根据 view_class 及其继承类找到相应的 plugins， 作为生成的 AdminViewClass 的 plugins 属性"
msgstr "retrieve the corresponding plugins according to the view_class and its super classes, and create it as the 'plugins' properties of the AdminViewClass"

# 48d054dad4ea45458eb2104bcbc95aee
#: ../../../xadmin/sites.pydocstring of
#: xadmin.sites.AdminSite.has_permission:1
msgid ""
"如果返回为 ``True`` 则说明 ``request.user`` 至少能够访问当前xadmin网站。否则无法访问xadmin的任何页面。"
msgstr "if return True the request.user at least can access the current xadmin website, otherwise not. "

# eec9ccde77cf40508f099b6b030d35fd
#: ../../../xadmin/sites.pydocstring of xadmin.sites.AdminSite.register:1
msgid "注册需要管理的 Model， 或是注册某 AdminView 的 OptionClass"
msgstr "register the Model that need to be managed, or register the OptionClass of the AdminView"

# c74b61ab562e4470b2dd394e48b1b5ba
#: ../../../xadmin/sites.pydocstring of xadmin.sites.AdminSite.register:3
msgid "传入 model 或是指定的 ModelOptionClass"
msgstr ""

# 758640a0bb1c48e79eedbbc5eb402eda
#: ../../../xadmin/sites.pydocstring of xadmin.sites.AdminSite.register:4
msgid ""
"当 model_or_iterable 为 Model 时，该参数为 ModelAdmin；model_or_iterable 为 AdminView "
"时 ，该参数为 OptionClass"
msgstr ""

# 0364184a23414b07a3302f2e085913b1
# d205c1aeb649440d8e27e6767c78bd8e
#: ../../../xadmin/sites.pydocstring of xadmin.sites.AdminSite.register:6
#: ../../../xadmin/sites.pydocstring of
#: xadmin.sites.AdminSite.register_plugin:6
msgid ""
"关于 Admin Plugin 具体内容可以参看 :class:`~xadmin.views.base.BaseAdminPlugin`。 举例::"
msgstr "please see xadmin.views.base.BaseAdminPlugin about the details of Admin Plugin. For example:"

# 831625ee575042bca14c1169c26f4c5a
#: ../../../xadmin/sites.pydocstring of
#: xadmin.sites.AdminSite.register_modelview:1
msgid "将 Model Base Admin View 类注册到 AdminSite，"
msgstr "register the classes Model Base Admin View to the AdminSite"

# abca0dd17ff54dec8812eda85f347143
# bce6727f1fdc452b92063e1415eccff7
# ebdaeb034b894bd38da3c86137b047c6
#: ../../../xadmin/sites.pydocstring of
#: xadmin.sites.AdminSite.register_modelview:3
#: ../../../xadmin/sites.pydocstring of
#: xadmin.sites.AdminSite.register_plugin:3 ../../../xadmin/sites.pydocstring
#: of xadmin.sites.AdminSite.register_view:3
msgid "view对应的url路径"
msgstr ""

# ba9e896c69a94e63b69a720ee2463312
#: ../../../xadmin/sites.pydocstring of
#: xadmin.sites.AdminSite.register_modelview:4
msgid "注册的 Model Base Admin View 类"
msgstr ""

# 68c4f2bbd6b54e80b360d293ee9566c1
#: ../../../xadmin/sites.pydocstring of
#: xadmin.sites.AdminSite.register_modelview:5
msgid "view对应的url name, 要包含两个%%s, 分别会替换为 app_label和module_name"
msgstr ""

# 9252d84f299648a4a32c84b9fe79d98f
#: ../../../xadmin/sites.pydocstring of
#: xadmin.sites.AdminSite.register_modelview:7
msgid ""
"注册 Model Base Admin View 可以为每一个在xadmin注册的 Model 生成一个 Admin View，并且包含相关的 "
"Model 信息。 具体内容可以参看 :class:`~xadmin.views.base.ModelAdminView`。 举例::"
msgstr "the registered Model Base Admin View in the AdminSite can be used to create AdminView for the registered Model which will contain the relevant Model information. Please check xadmin.views.base.ModelAdminView to see the details. For example:"

# e440742e81cd41488e4561632f7dfb12
#: ../../../xadmin/sites.pydocstring of
#: xadmin.sites.AdminSite.register_modelview:19
msgid "注册后，用户可以通过访问 ``/%(app_label)s/%(module_name)s/123/test`` 访问到该view"
msgstr "after the registration, the view can be accessed by path '/%(app_label)s/%(module_name)s/123/test'"

# 823fb0757c69423db687987b231ec793
#: ../../../xadmin/sites.pydocstring of
#: xadmin.sites.AdminSite.register_plugin:1
msgid "将 Plugin 类注册到 AdminSite，当任何 Admin View 运行时当前 view 绑定的 plugin 会生效。"
msgstr "register the Plugin class to the instance of AdminSite, the instance of corresponding plugin class which is bound to the current view class will be effective when any instance of the AdminView classes runs"

# b661cdc2ee994f5a999c26235db97adb
#: ../../../xadmin/sites.pydocstring of
#: xadmin.sites.AdminSite.register_plugin:4
msgid "该 plugin 绑定的 Admin View 类"
msgstr ""

# b5ebd15babce402f9361b5e4819c3a7b
#: ../../../xadmin/sites.pydocstring of
#: xadmin.sites.AdminSite.register_plugin:18
msgid "注册后，只要运行 SomeAdminView 实例的 get_context 方法，就会调用该 plugin。"
msgstr "after the registration, the plugin will be called when the get_context method of SomeAdminView is invoked "

# ad10971d6aa7463d9ebeb88875e03da4
#: ../../../xadmin/sites.pydocstring of xadmin.sites.AdminSite.register_view:1
msgid "将 Admin View 类注册到 AdminSite，一般用于创建独立的 admin 页面，例如登陆，介绍页面，帮助页面等。"
msgstr "an independent admin page e.g. login page, introduction page, help page, ect can be created by registering the AdminView class to the AdminSite."

# c8b885d2739c4d2983cd99411f37e1c6
#: ../../../xadmin/sites.pydocstring of xadmin.sites.AdminSite.register_view:4
msgid "注册的 Admin View 类"
msgstr ""

# 9d5cdeffdb6244ee94efbcfb55f7c76f
#: ../../../xadmin/sites.pydocstring of xadmin.sites.AdminSite.register_view:5
msgid "view对应的url name"
msgstr ""

# a89c6bd5452c45e096442329f6f7a275
#: ../../../xadmin/sites.pydocstring of xadmin.sites.AdminSite.register_view:7
msgid "关于 Admin View 具体内容可以参看 :class:`~xadmin.views.base.BaseAdminView`。 举例::"
msgstr "See xadmin.views.base.BaseAdminView to see the details about AdminView. For example:"

# 91517d541fa648c6b98b9dc341d0d76f
#: ../../../xadmin/sites.pydocstring of
#: xadmin.sites.AdminSite.register_view:18
msgid "注册后，用户可以通过访问 ``/test_view/`` 访问到该view"
msgstr "after the registration, the users can access the view through the path of '/test_view/'"

# c22be8b99e75431b9848a2dfef198215
#: ../../../xadmin/sites.pydocstring of
#: xadmin.sites.AdminSite.restore_registry:1
msgid "恢复当前 AdminSite 实例的信息"
msgstr "recover the information of the current AdminSite instance"

# b7cd785cb5fd4e9c8b5301bee3cab57a
#: ../../../xadmin/sites.pydocstring of xadmin.sites.AdminSite.unregister:1
msgid "取消 Model 或 OptionClass 的注册"
msgstr "unregister the Model or OptionClass"

# 08b42ffe385a4fd991084cadc0198d22
#: ../../../xadmin/sites.pydocstring of xadmin.sites.AdminSite.unregister:3
msgid "如果 Model 或 OptionClass 并未注册过，会抛出 :exc:`xadmin.sites.NotRegistered` 异常"
msgstr "if the Model or OptionClass have never been registered, it throws exception of 'xadmin.sites.NotRegistered'"

# 331068defce142cc8eb072f85b867980
#: ../../../xadmin/sites.pydocstring of xadmin.sites.AdminSite.urls:1
msgid ""
"返回 xadmin site 的urls，用于设置django的urls。该方法用于属性使用。在您的Django的 ``urls.py`` "
"中，使用示例如下::"
msgstr "return the urls attribute of the xdmin site, which is used to set django urls. This is property getter method and can be found in the 'urls.py' file of Django framework, the example shown as the following:"

# 675e7fe0ce724ff8864e38e301715e36
#: ../../../xadmin/sites.pydocstring of xadmin.sites.AlreadyRegistered:1
msgid "如果一个 model 已经在 :class:`AdminSite` 注册过，当尝试再次注册时会抛出这个异常。"
msgstr "if a model has been registered to AdminSite, an exception will be thrown when register it again."

# 4548e8d499ca4e0daf3cffa3e3db409c
#: ../../../xadmin/sites.pydocstring of xadmin.sites.MergeAdminMetaclass:1
msgid "用来生成 admin view class 的原类。"
msgstr "it is used to generate the original class of admin view class"

# 3849df63575546e8ad092c4eb40ce563
#: ../../../xadmin/sites.pydocstring of xadmin.sites.MergeAdminMetaclass:3
msgid "目前该原类没有做什么特殊的工作。接下来的版本该原类可能会给 admin view class 注入一些公共的属性。"
msgstr "for now the original class has no special usage, but a new public properties will be added to it in the next version"

# 031ab9146bf14e6e84c7d6905ccd38c1
#: ../../../xadmin/sites.pydocstring of xadmin.sites.NotRegistered:1
msgid ""
"当一个model并未在 :class:`AdminSite` 注册，当调用 :meth:`AdminSite.unregister` "
"想要取消该model的注册就会抛出该异常。"
msgstr "if a model has not been registered to the AdminSite, an exception will be thrown when try to unregister this model."
