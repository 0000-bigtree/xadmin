# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015, sshwsfc
# This file is distributed under the same license as the Django Xadmin package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Django Xadmin 2.1.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-06-27 16:52+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../views_api.rst:2
# 4e37be9b6fb54498b15a6a8b8143371f
msgid "Views"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.BaseAdminObject:1
# 9893c1b144cb4a56a496ac1cb2d15b12
msgid "提供给 :class:`BaseAdminView` 和 :class:`BaseAdminPlugin` 的通用基类，主要是提供了一些常用的通用方法"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.BaseAdminObject.get_admin_url:1
# eface94a67224c0b9e23bc8846637a0e
msgid "便捷方法，方便的通过 name 取得 url，会加上 AdminSite.app_name 的 url namespace"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.BaseAdminObject.get_form_params:1
# 18b561642b864bc89cdade06c250385e
msgid "将当前 request 的参数，新加或是删除后，生成 hidden input。用于放入 HTML 的 Form 中。"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.BaseAdminObject.get_form_params:3
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.BaseAdminObject.get_query_string:3
# ceb7746be6754fb8986763bbfd9aae03
# 0f3331b801c5403a96bb20384d5c161e
msgid "要新加的参数，该参数为 dict"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.BaseAdminObject.get_form_params:4
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.BaseAdminObject.get_query_string:4
# 44a4324fcbc54c8c82b5ab736159e226
# 00fb5ebbe2a548f3b13a35228b3f59b6
msgid "要删除的参数，该参数为 list, tuple"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.BaseAdminObject.get_model_perm:1
# ed0e362e4c1b48aaa6c872850423b525
msgid "获取 Model 的某种权限标签，标签的格式为::"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.BaseAdminObject.get_model_url:1
# 78e1cdc88e104ab59c05b55638c279e3
msgid "便捷方法，方便的通过 model, name 取得 url，会自动拼成 urlname，并会加上 AdminSite.app_name 的 url namespace"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.BaseAdminObject.get_model_view:1
# 400cfaec874c4e27a1881d2474c325a9
msgid "获取 ModelAdminViewClass 的实例。首先通过 :class:`~xadmin.sites.AdminSite` 取得 model 对应的 OptionClass，然后调用 :meth:`get_view` 方法"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.BaseAdminObject.get_model_view:3
# 7eb9196a07ff4147b82b0cac4556e8ae
msgid "ModelAdminViewClass 的类"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.BaseAdminObject.get_model_view:4
# a855a480e77041b18d8ce4c8f4673c07
msgid "绑定的 Model 类"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.BaseAdminObject.get_query_string:1
# ae09f6e27c8a4c10b323459642bdef03
msgid "在当前的query_string基础上生成新的query_string"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.BaseAdminObject.get_view:1
# ac1b19af9def450796e16397a7794dac
msgid "获取 AdminViewClass 的实例。实际上就是调用 :meth:`~xadmin.sites.AdminSite.get_view_class` 方法"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.BaseAdminObject.get_view:3
# dd86bd678f914e1bb777381fd146d260
msgid "AdminViewClass 的类"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.BaseAdminObject.get_view:4
# fd6df31bca674280bd3de48ff4367db1
msgid "希望与 AdminViewClass 合并的 OptionClass"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.BaseAdminObject.has_model_perm:1
# 117797880baf4c2791670bac3dfc7a96
msgid "判断当前用户是否有某个 Model 的 某种权限，例如:"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.BaseAdminObject.message_user:1
# 2a74869411814233a8b931781cf8ba8a
msgid "Send a message to the user. The default implementation posts a message using the django.contrib.messages backend."
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.BaseAdminObject.render_response:1
# 0460f57771e446b382fe18478cc0b6ab
msgid "便捷方法，方便生成 HttpResponse，如果 response_type 为 ``json`` 会自动转为 json 格式后输出"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.BaseAdminObject.static:1
# 5e648637ea0f4872aaf42111f32949a7
msgid ":meth:`xadmin.util.static` 的快捷方法，返回静态文件的 url。"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.BaseAdminObject.template_response:1
# 21b24eb3235242dbb1a62c69d89e38d6
msgid "便捷方法，方便生成 TemplateResponse"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.BaseAdminPlugin:1
# 000f1900d2204dfcb7192dab17b1e697
msgid "所有 Plugin 的基类。继承于 :class:`BaseAdminObject` 。插件的注册和使用可以参看 :meth:`xadmin.sites.AdminSite.register_plugin` ， 插件的原理可以参看 :func:`filter_hook` :"
msgstr ""

#: ../../../xadmin/views/base.py:docstring of xadmin.views.base.filter_hook:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.filter_hook:1
# d6ee8ab74ea04279aef6c03e15db9b32
# 74f5be5001ef422d9ce75b5f388245bb
msgid "表明 AdminView 的方法可以被插件插入的装饰器。执行使用了该装饰器的方法时，会按照以下过程执行:"
msgstr ""

#: ../../../xadmin/views/base.py:docstring of xadmin.views.base.filter_hook:3
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.filter_hook:3
# 09d059b586b74b67945a0e399905d821
# 83e85591588349f98824b17cb9ba5918
msgid "首先将实例的 plugins 属性取出，取出含有同样方法名的插件"
msgstr ""

#: ../../../xadmin/views/base.py:docstring of xadmin.views.base.filter_hook:5
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.filter_hook:5
# 574f0a6c325d4cd2b28f75bb34e8be0e
# 368e8dba3d7c4d6b8be229634f4d3655
msgid "按照插件方法的 ``priority`` 属性排序"
msgstr ""

#: ../../../xadmin/views/base.py:docstring of xadmin.views.base.filter_hook:7
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.filter_hook:7
# 85ad2e5c4ebd495f8956300f44d26f8e
# 4719ed841f274858b640a366c0a70725
msgid "顺序执行插件方法，执行插件方法的规则:"
msgstr ""

#: ../../../xadmin/views/base.py:docstring of xadmin.views.base.filter_hook:9
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.filter_hook:9
# 3b85e32075f749f1a031f379af2ae84a
# 32c61660ed4b44e4a6c3eb71627616ba
msgid "如果插件方法没有参数，AdminView 方法的返回结果不为空则抛出异常"
msgstr ""

#: ../../../xadmin/views/base.py:docstring of xadmin.views.base.filter_hook:11
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.filter_hook:11
# 26838ec5b7304c718bed1931b39b559c
# f8da2156fe1b4c1a9cd29675a8c85212
msgid "如果插件方法的第一个参数为 ``__`` ，则 AdminView 方法将作为第一个参数传入，注意，这时还未执行该方法， 在插件中可以通过 ``__()`` 执行，这样就可以实现插件在 AdminView 方法执行前实现一些自己的逻辑，例如::"
msgstr ""

#: ../../../xadmin/views/base.py:docstring of xadmin.views.base.filter_hook:19
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.filter_hook:19
# 8fb69a9c2862495ea73b44de6f251a71
# b13b94a7bcc54bceb53d14399bea03a0
msgid "如果插件方法的第一个参数不为 ``__`` ，则执行 AdminView 方法，将结果作为第一个参数传入"
msgstr ""

#: ../../../xadmin/views/base.py:docstring of xadmin.views.base.filter_hook:21
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.filter_hook:21
# 0e923a7a2759467f92186ff25952be95
# 495e6baf7b2d4d00b71d7232711d7aca
msgid "最终将插件顺序执行的结果返回"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.BaseAdminPlugin.init_request:1
# 40888ee0c6984e678fec7ea1470cee26
msgid "插件的初始化方法，Plugin 实例化后被调用的第一个方法。该方法主要用于初始化插件需要的属性， 同时判断当前请求是否需要加载该插件，例如 Ajax插件的实现方式::"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.BaseAdminPlugin.init_request:7
# c2b3c94754b245dab06fe99129dcbfbc
msgid "当返回值为 ``False`` 时，所属的 AdminView 实例不会加载该插件"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.BaseAdminView:1
# c6b98d10302e4ed9b11399eabd818e9f
msgid "所有 AdminView 的基类。继承于 :class:`BaseAdminObject` 和 :class:`django.views.generic.View`"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.BaseAdminView:3
# 7dc0bb42df6d431f93359478e13a72d6
msgid "该类是 xadmin 中 **最核心** 的类，所有的 AdminView 都需要继承此类。xadmin 与 Django Admin最大的区别就在于 xadmin  每次请求会产生一个 AdminView 的实例，也就是基于 Class 的 view 方式。该方式在 Django 1.3 被实现，可以参看 Django 的官方文档 `Class-based generic views <https://docs.djangoproject.com/en/1.4/topics/class-based-views/>`_"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.BaseAdminView:7
# b568ccb84ba94785855625a94c623db1
msgid "使用 Class 的方式实现的好处显而易见。首先，每一次请求都会产生一个新的实例，这样 request 这种变量就可以保存在实例中，基类的扩展，或 是复写父类方法时再也不用带着 request 到处跑了，当然，除了 request 还有很多可以基于实例存储的变量。"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.BaseAdminView:10
# af7bcbfa813d406e9348f129829d3a1e
msgid "其次，基于实例的方式非常方便的实现了插件功能，而且还能实现插件的动态加载，因为每个 AdminView 实例可以根据自身实例的属性情况来判断加载 哪些插件，具体信息也可以参看 :class:`BaseAdminPlugin` 的描述。"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.BaseAdminView:13
# 1c0d34c3a665416f82e3134e715dcd6a
msgid "实现一个自己的 AdminView 类很简单，举例如下::"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.BaseAdminView:25
# 31b7639fae334654bbec75e2fd4e9eae
msgid "而后您就可以在 ``me_test/`` 访问到该view了。当然xadmin同事提供了一些通用的 AdminView，分别为"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.BaseAdminView:27
# 5176c18e99614bc6bed98b6ae7dd7a4f
msgid ":class:`CommAdminView` : xadmin通用界面的基础View，提供了xadmin通用界面需要的一些数据(菜单等)"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.BaseAdminView:28
# f22dbbc739ad4fa1b570e02691d79929
msgid ":class:`ModelAdminView` : 核心类之一，提供了基于 Model 的 AdminView。"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.BaseAdminView.as_view:1
# 155aa4a65c4b4e5ab93f0d991a855c1d
msgid "复写了 :meth:`View.as_view` 方法，主要是将 :meth:`View.dispatch` 的也写到了本方法中，并且去掉了一些初始化操作， 因为这些初始化操作在 AdminView 的初始化方法中已经完成了，可以参看 :meth:`BaseAdminView.init_request`"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.BaseAdminView.get_context:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.BaseAdminView.get_media:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.CommAdminView.get_breadcrumb:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.CommAdminView.get_context:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.CommAdminView.get_model_icon:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.CommAdminView.get_nav_menu:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelAdminView.get_breadcrumb:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelAdminView.get_context:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelAdminView.get_object:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelAdminView.get_object_url:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.get:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.get_context:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.get_list_display:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.get_list_display_links:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.get_list_queryset:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.get_media:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.get_ordering:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.get_ordering_field:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.get_ordering_field_columns:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.get_page_number:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.get_paginator:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.get_response:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.get_result_list:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.post:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.post_response:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.post_result_list:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.result_header:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.result_headers:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.result_item:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.result_row:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.results:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.url_for_result:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.formfield_for_dbfield:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.get:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.get_context:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.get_error_list:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.get_field_attrs:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.get_field_style:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.get_form_helper:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.get_form_layout:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.get_media:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.get_model_form:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.get_readonly_fields:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.instance_forms:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.post:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.prepare_form:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.save_forms:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.save_models:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.save_related:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.valid_forms:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.CreateAdminView.get_breadcrumb:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.CreateAdminView.get_context:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.CreateAdminView.get_form_datas:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.CreateAdminView.get_response:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.CreateAdminView.post_response:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.UpdateAdminView.get_breadcrumb:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.UpdateAdminView.get_context:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.UpdateAdminView.get_form_datas:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.UpdateAdminView.get_response:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.UpdateAdminView.post_response:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.DeleteAdminView.delete_model:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.DeleteAdminView.get:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.DeleteAdminView.get_breadcrumb:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.DeleteAdminView.get_context:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.DeleteAdminView.post:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.DeleteAdminView.post_response:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.DetailAdminView.get:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.DetailAdminView.get_breadcrumb:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.DetailAdminView.get_context:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.DetailAdminView.get_field_result:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.DetailAdminView.get_form_helper:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.DetailAdminView.get_form_layout:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.DetailAdminView.get_media:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.DetailAdminView.get_model_form:1
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.DetailAdminView.get_response:1
# b810e1aaf84840b0a61eb5c7818188b3
# 540e9a3dad6c4589a7237f48ef60ab76
# 35bbe5acff164dabab0a84128ea62a58
# 242e6613e14f43d88641f486f19c3f5b
# fad60cc4e46a4fc79bb882a374e134c9
# aa34babb97d44691af835cbae188bf57
# 685b02f1786f4eb4b3555221906a92b7
# c734ae735971437e93d6a840ca15a379
# bf340af3c6ab43f5a1b3899fba50405e
# 73d2c0291e5f446bb38eec3a43d9916d
# 73c061522184422fbeadaedf5cfc31b0
# 05709b1de76c486e970c9eb2260c5dfe
# 618fca95b8a640e4ab1d13b6e6da6e7b
# a123fdfc61e949119a832472b84b2c9d
# 25b5bf7ccb114b44b20d7d4c36625888
# 336a9fa111304806a047906a7a5c7876
# e140e5095781478f85d02941c05e5192
# 04c0356ff6f04b3b9ccd8b3bc87aa934
# bd992f6a7f7f48d1b619b5b5502df053
# b7e7999b2c784e14a4a461d7dbdf6474
# 0925c30f05604b0f901b4dddf0897f27
# a5456c97ffd64642989df7c43931c5a4
# 5ae4f478caa8464e9155fe7aa7873e93
# 2f2aade8c3014f45b3859031d95ed66e
# 4ddcc74740c846d09762906640e165e5
# f6a5385edc544098bfbc7464143b034b
# 3e6429bd72ce43c4823620bde06ab310
# 7e8133bd32914830930a094e852cae79
# 73b98a6f131d45d7bab7807359ce6605
# ee13b500e80f4c0b9c0b5a6b2a9e25a1
# 37e2b1f1bfbd4403b736197571bf76d2
# 0b36dad5225a4e31a7c8183ae9db941b
# d119b911fce6468f96c192c42ec77a1a
# 45910c3fd1c746cf86c9a6cc26155bec
# 364d9cd0de1942618108fc95f9fec58f
# a0905c2f970e4bf1a8b2426f490a0548
# 40ef379d37e547b5b0fbc66fc349f81f
# 456d2d0c4c2e4e5c84024cfb9cf7038c
# 6fbf1dc35a2c479f89550195f1415d76
# 9b02bd5180534ad4b0f0dc44130a20b9
# da83ca4bbc3b4f5db5d92c512d8a2915
# bfe811720a194024b1b10c1de5217589
# 1520e09515f6475ea252178b0f4ab2c7
# 81b87913cb8a4f70865116e6a30bc882
# ce52ca17d3cc4dd8aeb68b5cc750b293
# 8fbaad6ee99a451196d8e5d3e170687f
# 2846caad2d4542bd90c73beccdd33721
# 2859c759c6314ea7b051212ebe6aa164
# c2049984f7df40e082bb3235069049f1
# 57ad0861018b4f948e1beaf5019ee73e
# e7680ac79f8e46efac4b2c1f1b15d343
# efeb18b81646487aadbb61fc94c7377c
# 93618f5fe98d4053944f7a79cad37ef4
# 8d244c77e45e4180bfbd49b65ebeeb87
# 54c36272cdca4178918ba348c1b62499
# f6e012c8780946b1b3247e0db7e546ea
# 58b1164f6e5f47d590f8295059bdda80
# 0d8dfe4350994fca91ae14e5d1af1477
# 5a85191a41734c28bdf7027467cc9c77
# 9255399bc4724106bb00dd2e7f043384
# e60170720ffa42a38439c878c5c0d5e2
# 48c27711e9a2461da82b1021fec9cb38
# 5a2bc74a12e24b739b00d38f67542363
# 7e11d653e86540f1be234b6f3fd69f6b
# f06220cb07ff4f95b69c8a86fd8cb013
# 2ca4e02e24d8419fa557da68adef7886
# f05479ceb3ff46bbad9cee091b0d6979
# 0b7c5866a46e44fdbc6ef0705930f5ab
# 8d4aa1fd65d24a949fc43821a3410589
# d0dbe2ebe9154e3e89e3097510f4c299
# a9b37abd100342b7afe82407ff4dc84e
# 2b9f2dccb97247c88c1976a5ebdb5851
# 8e71fc9fc79d4083a9613c079aa0b8f7
# 3f8c5585fa0b47d7bc079faa4fea0679
# 3c25e907a2cb47219a75fd7b8bc859a9
msgid "``filter_hook``"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.BaseAdminView.get_context:4
# ebfa3608dbdc4abb8cda77c6185f2b0e
msgid "返回显示页面所需的 context 对象。"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.BaseAdminView.get_media:4
# 71f439587a714b668b5182a2b4efcd06
msgid "取得页面所需的 Media 对象，用于生成 css 和 js 文件"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.BaseAdminView.init_plugin:1
# 8902791ec9dd463b86613723f181d0cd
msgid "AdminView 实例中插件的初始化方法，在 :meth:`BaseAdminView.init_request` 后调用。根据 AdminView 中 的 base_plugins 属性将插件逐一初始化，既调用 :meth:`BaseAdminPlugin.init_request` 方法，并根据返回结果判断是否加载该插件。 最后该方法会将初始化后的插件设置为 plugins 属性。"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.BaseAdminView.init_request:1
# 51b152d9428a41bd8ae5d02ae6ee7438
msgid "一般用于子类复写的初始化方法，在 AdminView 实例化时调用，:class:`BaseAdminView` 的该方法不做任何操作。"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.CommAdminView:1
# 909a5e3960264d3c9cbfa979bda93126
msgid "基于 :class:`BaseAdminView` 提供的通用 AdminView。主要是完成了一些 xadmin 页面通用内容的处理。主要有:"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.CommAdminView:3
# f285b64065e84b11a7cbc94d8c555392
msgid "网站标题"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.CommAdminView:4
# 4e124ab39d7e40638e5ba3c7f03cdf31
msgid "全局的 Model 图标"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.CommAdminView:5
# 58efcd7de34447159e2eaff426c01d2c
msgid "网站菜单"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.CommAdminView:7
# ee6e527f39f04529aa162f0e2b1f28a3
msgid "**View属性**:"
msgstr ""

#: ../../../xadmin/views/base.py:docstring of xadmin.views.CommAdminView.site_title:1
# 85e5cce3a3d44074bd367d165f622fe0
msgid "网站的标题"
msgstr ""

#: ../../../xadmin/views/base.py:docstring of xadmin.views.CommAdminView.site_footer:1
# 5656ceccb08a46f3b27e3aef31c6e9b7
msgid "网站的下角标文字"
msgstr ""

#: ../../../xadmin/views/base.py:docstring of xadmin.views.CommAdminView.global_models_icon:1
# 28402b470af4410999965d2e62223687
msgid "全局的 Model 图标::"
msgstr ""

#: ../../../xadmin/views/base.py:docstring of xadmin.views.CommAdminView.base_template:1
# 20189e84f8d14eda971d7ecc02053124
msgid "View模板继承的基础模板"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.CommAdminView.get_context:4
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelAdminView.get_context:4
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.get_context:4
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.DetailAdminView.get_context:4
# 6869f6ca3adf44afbd48dfc5d0f1df88
# 705523a64dd0432488be3b71e66e367b
# 4f1eeda709db4c50a9ed6e92e7e3b864
# 0b41f940353a4186bb0ebe6b4fa50554
msgid "**Context Params** :"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.CommAdminView.get_context:6
# 89473b322cd3441486cd1960c5573e90
msgid "``site_title`` : 使用 :attr:`site_title` 属性，默认为 \"Django Xadmin\""
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.CommAdminView.get_context:8
# 76336409daca41eb97aa2aed9535b967
msgid "``nav_menu`` : 权限过滤后的系统菜单项，如果在非 DEBUG 模式，该项会缓存在 SESSION 中"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.CommAdminView.get_model_icon:4
# fc78c29682d24d0191f0f66321b898f4
msgid "取得 Model 图标，Model 图标会作为 css class，一般生成 HTML 如下::"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.CommAdminView.get_model_icon:8
# b62c58b6a221485fab56f69fec4534d3
msgid "这是 Bootstrap 标准的图标格式，xadmin 目前是用了 Font Icon (Font-Awesome)，您可以制作自己的图标，具体信息可以参考 `如何制作自己的字体图标 <http://fortawesome.github.com/Font-Awesome/#contribute>`_"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.CommAdminView.get_model_icon:13
# 29a711d834e04eb18bafa17615650ff5
msgid "Model 图标，目前被使用在以下几个地方，当然您也可以随时使用在自己实现的页面中:"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.CommAdminView.get_model_icon:15
# d681a05db3c942a488e53be809375357
msgid "系统菜单"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.CommAdminView.get_model_icon:16
# e4fa3cc1265345cc84b900596eda0986
msgid "列表页面标题中"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.CommAdminView.get_model_icon:17
# f563fda2f8074522b003590d092d348d
msgid "添加、修改及删除页面的标题中"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.CommAdminView.get_model_icon:19
# 4ed21602cc7c48acb2626b851fda59a0
msgid "``FAQ: 如果定义 Model 图标``"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.CommAdminView.get_model_icon:21
# 603116110bad4104bfd7c042d4e80a6e
msgid "您可以在 :class:`CommAdminView` 的 OptionClass 中通过 :attr:`CommAdminView.globe_models_icon` 属性设定全局的 Model 图标。 或者在 Model 的 OptionClass 中设置 :attr:`model_icon` 属性。"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.CommAdminView.get_nav_menu:4
# d75eb41d731640b884d1a987c042fc45
msgid "返回网站菜单，如果 :meth:`get_site_menu` 返回的结果不是 None ，那么将把其返回结果作为菜单的第一部分，而后会补全没有出现的 Model 列表页菜单项， 如果 :meth:`get_site_menu` 返回为 None， 那么将自动根据 App 和 Model 生成两级的菜单。"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.CommAdminView.get_nav_menu:7
# b63e003ae41a467d8a8ca3f647437fda
msgid "格式见 :meth:`get_site_menu` 返回格式"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.CommAdminView.get_site_menu:1
# efd92d69d7af4e06a48d8da806b99396
msgid "``FAQ:如何定制系统菜单``"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.CommAdminView.get_site_menu:3
# b34b8862c5e84c58b7456db75d2a246f
msgid "用于给子类复写的方法，开发者可以在子类或 OptionClass 中复写该方法，返回自己定义的网站菜单。菜单的格式为::"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.CommAdminView.get_site_menu:11
# 4652de9d018449acbab2ae12f629db57
msgid "菜单项的 ``perm`` 和 ``url`` 如果是基于 Model 的，可以使用 xadmin 提供的便利方法  :meth:`BaseAdminObject.get_model_perm` 和 :meth:`BaseAdminObject.get_model_url`。举例说明创建菜单::"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelAdminView:1
# 6147b02272704b588a6d0579133a3081
msgid "基于 Model 的 AdminView，该类的子类，在 AdminSite 生成 urls 时，会为每一个注册的 Model 生成一个 url 映射。 ModelAdminView 注册时使用 :meth:`xadmin.sites.AdminSite.register_modelview` 方法注册，具体使用实例可以参见该方法的说明，或参考实例::"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelAdminView:13
# 846b5c968e924b01967dbb982345ea10
msgid "注册后，用户可以通过访问 ``/%(app_label)s/%(module_name)s/123/test`` 访问到该view"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelAdminView:15
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView:3
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView:3
# 5923c184fc644123bf9eaf8666e942ae
# f5665910b1bf434d992389479f04e5c1
# 0907f60b19c14bda88c70cf8facf13c9
msgid "**Option 属性**"
msgstr ""

#: ../../../xadmin/views/base.py:docstring of xadmin.views.ModelAdminView.fields:1
# 06fe9937850f4dc59e46020713d93a29
msgid "(list,tuple) 默认显示的字段"
msgstr ""

#: ../../../xadmin/views/base.py:docstring of xadmin.views.ModelAdminView.exclude:1
# 6bec9983122244e38b7af311ba9f1a9a
msgid "(list,tuple) 排除的字段，主要用在编辑页面"
msgstr ""

#: ../../../xadmin/views/base.py:docstring of xadmin.views.ModelAdminView.ordering:1
# 5733ded80ea2453da4ffee320bb0efeb
msgid "(dict) 获取 Model 的 queryset 时默认的排序规则"
msgstr ""

#: ../../../xadmin/views/base.py:docstring of xadmin.views.ModelAdminView.model:1
# 97b01a48f2084edaa4ba351d280e3bcf
msgid "绑定的 Model 类，在注册 Model 时，该项会自动附在 OptionClass 中，见方法 :meth:`AdminSite.register`"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelAdminView:22
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.DeleteAdminView:7
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.DetailAdminView:10
# 81eec5464c14445ea0dfc26e9c671de8
# 9ddadc87d26a448396682e7471549336
# 24a712eace834306bca7760926e02434
msgid "**实例属性**"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelAdminView:26
# edc8a659663b4f629c518d2cc8ab30de
msgid "即 Model._meta"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelAdminView:30
# beb9beff5c1140eb976ef1f0a476b027
msgid "即 Model._meta.app_label"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelAdminView:34
# f7bae50ff97b4464b03438415df4951b
msgid "即 Model._meta.module_name"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelAdminView:38
# f881a23f0087478ca76e954e31aa00b6
msgid "即 (self.app_label, self.module_name)"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelAdminView.get_context:6
# 9d0afb2687654b4e9a0d3860e55240d8
msgid "``opts`` : Model 的 _meta"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelAdminView.get_context:8
# d0fc70c5291c475a9a32ba5c23f71bf2
msgid "``app_label`` : Model 的 app_label"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelAdminView.get_context:10
# bb4e85997ade4ab1ad788bcb0c025847
msgid "``module_name`` : Model 的 module_name"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelAdminView.get_context:12
# 811c8a6927eb4ddb9f192b4e713f6a1a
msgid "``verbose_name`` : Model 的 verbose_name"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelAdminView.get_model_perms:1
# 54f926af63c64e9389d8f8f2686feae1
msgid "返回包含 Model 所有权限的 dict。dict 的 key 值为： ``add`` ``view`` ``change`` ``delete`` ，  value 为 boolean 值，表示当前用户是否具有相应的权限。"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelAdminView.get_object:4
# 6d97e8d4acf34e5096d5ebbb083b0a42
msgid "根据 object_id 获得唯一的 Model 实例，如果 pk 为 object_id 的 Model 不存在，则返回 None"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelAdminView.get_ordering:1
# 53e37a30db08446196b78f5cf3992041
msgid "返回 Model 列表的 ordering， 默认就是返回 :attr:`ModelAdminView.ordering` ，子类可以复写该方法"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelAdminView.get_template_list:1
# 495dd7c9b337431095f68460e80105ea
msgid "根据 template_name 返回一个 templates 列表，生成页面是在这些列表中寻找存在的模板。这样，您就能方便的复写某些模板。列表的格式为::"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelAdminView.has_add_permission:1
# 34b5cb51de524479a6868c4fed7f1321
msgid "返回当前用户是否有添加权限"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelAdminView.has_change_permission:1
# 88bd0519550747baa62ec4dcec3d5886
msgid "返回当前用户是否有修改权限"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelAdminView.has_delete_permission:1
# 1844dfa5a3ac40a2a027faa7642e9386
msgid "返回当前用户是否有删除权限"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelAdminView.has_view_permission:1
# a3aae86fe17046609d14d07252d194eb
msgid "返回当前用户是否有查看权限"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelAdminView.has_view_permission:5
# ec451795258c4b9097efd8f3b62dfbed
msgid "目前的实现为：如果一个用户有对数据的修改权限，那么他就有对数据的查看权限。当然您可以在子类中修改这一规则"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelAdminView.model_admin_url:1
# 2135c1711ad548399c1a0719a6b8fed3
msgid "等同于 :meth:`BaseAdminObject.get_admin_url` ，只是无需填写 model 参数， 使用本身的 :attr:`ModelAdminView.model` 属性。"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelAdminView.queryset:1
# 88ca80b8c2ec4bc3864474b9ba223d8a
msgid "返回 Model 的 queryset。可以使用该属性查询 Model 数据。"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView:1
# f8599f7b503b4f5c80f39493545e1c6d
msgid "显示数据列表的 AdminView, 该 View 实现了基本的数据排序和分页等功能."
msgstr ""

#: ../../../xadmin/views/list.py:docstring of xadmin.views.ListAdminView.list_display:1
# 6ff5d748008b4d42b49c6a9bbba0447d
msgid "默认显示列"
msgstr ""

#: ../../../xadmin/views/list.py:docstring of xadmin.views.ListAdminView.list_display_links:1
# 9e48578660dd4d2a9a5db2f093292f12
msgid "显示修改或查看数据详情连接的列"
msgstr ""

#: ../../../xadmin/views/list.py:docstring of xadmin.views.ListAdminView.list_select_related:1
# bcadc90bede6423cb1cbb814aff010c8
msgid "是否提前加载关联数据, 使用 ``select_related``"
msgstr ""

#: ../../../xadmin/views/list.py:docstring of xadmin.views.ListAdminView.list_per_page:1
# 0e037c8d82cd417cad048238163c91bd
msgid "每页显示数据的条数"
msgstr ""

#: ../../../xadmin/views/list.py:docstring of xadmin.views.ListAdminView.list_max_show_all:1
# 5b924c220d1a4d3a8120a2097bd88149
msgid "每页最大显示数据的条数"
msgstr ""

#: ../../../xadmin/views/list.py:docstring of xadmin.views.ListAdminView.list_exclude:1
# 150f4d5a7d0546499f7f939ae69e6898
msgid "排除显示的列, 在显示列的设置中不会出现这些被排除的列"
msgstr ""

#: ../../../xadmin/views/list.py:docstring of xadmin.views.ListAdminView.search_fields:1
# 842ada150cf44442b254949b6e6249a5
msgid "按照这些列搜索数据"
msgstr ""

#: ../../../xadmin/views/list.py:docstring of xadmin.views.ListAdminView.ordering:1
# 5d330be0e493456ba3bcf8c81dab45a1
msgid "默认的数据排序"
msgstr ""

#: ../../../xadmin/views/list.py:docstring of xadmin.views.ListAdminView.object_list_template:1
# 857dc565d9c341c895badb5a26641333
msgid "显示数据的模板"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.get:4
# 47613a39570f496a83a704fa0b73225e
msgid "显示 Model 列表."
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.get_check_field_url:1
# bc0f10cb39404a23bdc6b8df5c0c34b6
msgid "返回 ``显示列`` 菜单项中每一项的 url."
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.get_context:6
# f24e021c74bd40bf903ccf3d7078da1a
msgid "``model_fields`` : 用于 ``选择显示列`` 功能, 保存所有可显示的列信息"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.get_context:8
# 4e4e1132ad0e40b380901e1810068ded
msgid "``result_headers`` : 显示列表的头部信息, 是 :class:`ResultHeader` 列表"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.get_context:10
# 58ef6b1cce5b4aebacece40dc74130b1
msgid "``results`` : 显示列表的内容信息, 是 :class:`ResultItem` 列表"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.get_list_display:4
# 166fe07e0e5646568f05516ec7d8189c
msgid "获得列表显示的列. 如果 request 中有 ``_cols`` 参数, 则使用该参数, 否则使用 :attr:`list_display`."
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.get_list_display:8
# 5ff5dad0326d4ca2837f75f8931a83e8
msgid "该方法会赋值 :attr:`base_list_display` 属性, 保存 list_display. 如果有插件修改了该方法的返回值 (例如: Action 插件), 可能会增加其他列. 但是这些列可能对其他插件没有意义(例如: 导出数据插件). 那么其他插件可以使用 :attr:`base_list_display` 这个属性, 取得最原始的显示列."
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.get_list_display_links:4
# 11763e798236438cbd49008a5f285273
msgid "返回一组列, 这些列的数据会以链接形式显示, 连接地址可能是数据修改页面(如果有修改权限), 或是查看页面.  默认情况下会使用 :attr:`list_display_links` , 如果 :attr:`list_display_links` 为空, 则返回 :attr:`list_display` 第一列."
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.get_list_queryset:4
# b018f97c2b264065913df778230c02e3
msgid "取得 Model 的 queryset, 该 queryset 已经进行排序和过滤过. 其他插件可以在这里修改 queryset"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.get_media:4
# 9d9c6bc3c21a43dc8d9b22003251b881
msgid "返回列表页面的 Media, 该页面添加了 ``xadmin.page.list.js`` 文件"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.get_model_method_fields:1
# 5873b67f13e243f8a71ffa93e7a17cfb
msgid "将所有 OptionClass 中含有 ``is_column=True`` 的方法, 使用 :class:`FakeMethodField` 包装成一个假 的 DB Field. 用于在选择显示列的功能中显示."
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.get_ordering:4
# adac692067614739af627ea3cbc8ec00
msgid "Returns the list of ordering fields for the change list. First we check the get_ordering() method in model admin, then we check the object's default ordering. Then, any manually-specified ordering from the query string overrides anything. Finally, a deterministic order is guaranteed by ensuring the primary key is used as the last ordering field."
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.get_ordering_field:4
# 08f1f4f571e64131aebc777725d8c2de
msgid "根据参数 ``field_name`` 获取需要排序 Field 的名字. ``field_name`` 可能是 Model 的一个标准 DB Field,  也有可能是可执行方法, 或是 OptionClass 及 Model 的一个属性, 这种情况下会取其 ``admin_order_field`` 属性 作为排序字段, 如果取不到, 则返回 ``None``. 例如::"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.get_ordering_field_columns:4
# 3e64c334fb324037a3c899736da51708
msgid "Returns a SortedDict of ordering field column numbers and asc/desc"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.get_page_number:4
# 264a158fb8264234b1f6c90988ba7843
msgid "返回翻页组件各页码显示的 HTML 内容. 默认使用 bootstrap 样式"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.get_page_number:6
# 9ddee2a52ee145d58b6c39cba162a0e9
msgid "页码, 可能是 ``DOT``"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.get_paginator:4
# 517a540502724ffe96989452609d7403
msgid "返回 paginator 实例, 使用 :attr:`paginator_class` 类实例化"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.get_response:4
# 72602631de9c4ec0965a55e6703213c0
msgid "在 :meth:`get_context` 之后执行. 该方法默认无返回内容, 插件可以复写该方法, 返回指定的 HttpResponse."
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.init_request:1
# 15c127e8399244e397a7fcbdb28fb46f
msgid "初始化请求, 首先判断当前用户有无 view 权限, 而后进行一些生成数据列表所需的变量的初始化操作."
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.make_result_list:1
# ac9958956080472e8c32b87c1fe696a4
msgid "该方法负责生成数据列表及分页信息. 数据列表会赋值给属性 :attr:`result_list` , 插件可以在该方法后执行一些数据处理."
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.post:4
# bda6c8c53dd948f4b991732f963714f0
msgid "显示 Model 列表的 POST 请求, 默认跟 GET 请求返回同样的结果, 插件可以通过复写 :meth:`post_response` 方法改变 POST 请求的返回"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.post_response:4
# 33e6691f46a142e2ae066a97f0b99dd3
msgid "列表的 POST 请求, 该方法默认无返回内容, 插件可以复写该方法, 返回指定的 HttpResponse."
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.result_header:4
# 15dc8b1f2cb04ea4ac7704ee0825566b
msgid "返回某一列的头信息, 一个 :class:`ResultHeader` 实例."
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.result_header:6
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.result_item:7
# 970ed904cfd241ae858e4ccbdd3b4e15
# 87dd42484f274030953b481e86b80498
msgid "列的名字"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.result_header:7
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.result_item:8
# f8e80de0cf63450884bc8b0a5657ef0a
# 2c05c1b42ff542479c9f567e0ea046d6
msgid ":class:`ResultHeader` 实例"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.result_headers:4
# 536ea1c6efbb4d13b17709db64e578eb
msgid "返回列表的列头信息. 返回一个 :class:`ResultRow` 实例, 其 ``cells`` 属性包含列信息"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.result_item:4
# 90ce14d22e49454f86957d7aa017d7c6
msgid "返回某一对象某一列的数据, :class:`ResultItem` 实例."
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.result_item:6
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.result_row:6
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.url_for_result:6
# ad49d21a8ad148b08fa49afdbfca5ca1
# 4c17c821b5994aaf93102d064096a60f
# 931dd86f3b804b9ebc3784ccbbda103d
msgid "Model 对象"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.result_row:4
# 36b7526947eb4b5a88f1cb1d7e27ca52
msgid "返回列表某一行的内容信息. 返回一个 :class:`ResultRow` 实例, 其 ``cells`` 属性包含各列内容信息"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.results:4
# e8bbc20890ba4c6292216bc4c0417925
msgid "返回整个列表内容信息. 返回一个 :class:`ResultRow` 的数据, 包含各行信息"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ListAdminView.url_for_result:4
# 12c6c94509f946aa8995cd82bc339783
msgid "返回列表内容连接. 如果当前用户有修改权限就返回修改页面的连接, 否则返回查看详情页面连接"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView:1
# 2a558fdd7bc649958c23670fe3a026fd
msgid "用于添加或修改数据的 AdminView，该类是一个基类，提供了数据表单显示及修改等通用功能，被 :class:`CreateAdminView` 及 :class:`UpdateAdminView` 继承"
msgstr ""

#: ../../../xadmin/views/edit.py:docstring of xadmin.views.ModelFormAdminView.form:1
# 72ad88152af04e18b4ec389815970b49
msgid "使用 Model 生成 Form 的基本 Form 类，默认为 django.forms.ModelForm"
msgstr ""

#: ../../../xadmin/views/edit.py:docstring of xadmin.views.ModelFormAdminView.formfield_overrides:1
# fd10fab6cc304557a3c2c73b7e373fe3
msgid "可以指定某种类型的 DB Field，使用指定的 Form Field 属性，例如::"
msgstr ""

#: ../../../xadmin/views/edit.py:docstring of xadmin.views.ModelFormAdminView.formfield_overrides:8
# 7e6ef0d95303440b9d567a68579a269a
msgid "这样，显示所有 FileField 字段时，都会使用 ``mywidgets.XFileWidget`` 来显示"
msgstr ""

#: ../../../xadmin/views/edit.py:docstring of xadmin.views.ModelFormAdminView.readonly_fields:1
# f0b060f0b4d94fc9bc157d32b1bc5a2b
msgid "只读的字段，这些字段不能被编辑"
msgstr ""

#: ../../../xadmin/views/edit.py:docstring of xadmin.views.ModelFormAdminView.style_fields:1
# 2d1fbf36e6e141579f4699be9874583d
msgid "指定 Field 的 Style， Style一般用来实现同一种类型的字段的不同效果，例如同样是 radio button，有普通及``inline``两种 Style。 通常 xadmin 针对表单的插件会实现更多的 Field Style。您使用这些插件后，只要方便的将想要使用插件效果的字段设置成插件实现的 Style 即可，例如::"
msgstr ""

#: ../../../xadmin/views/edit.py:docstring of xadmin.views.ModelFormAdminView.style_fields:7
# e77a54dc7f8a44388e9666171ab28e73
msgid "``rich-textarea`` 可能是某插件提供的 Style，这样显示 ``content`` 字段时就会使用该插件的效果了"
msgstr ""

#: ../../../xadmin/views/edit.py:docstring of xadmin.views.ModelFormAdminView.relfield_style:1
# d4fc3b60ca074de688a35d7ba7258ecb
msgid "当 Model 是其他 Model 的 ref model 时，其他 Model 在显示本 Model 的字段时使用的 Field Style"
msgstr ""

#: ../../../xadmin/views/edit.py:docstring of xadmin.views.ModelFormAdminView.save_as:1
# 6698f61730ea49b6ab5691ecd3b3c5c8
msgid "是否显示 ``另存为`` 按钮"
msgstr ""

#: ../../../xadmin/views/edit.py:docstring of xadmin.views.ModelFormAdminView.save_on_top:1
# fc64182598e9442b9a856e8ea6b75ab0
msgid "是否在页面上面显示按钮组"
msgstr ""

#: ../../../xadmin/views/edit.py:docstring of xadmin.views.ModelFormAdminView.add_form_template:1
# 49571572a9af4ac1b5c8f5f0f3849e3b
msgid "添加页面的模板"
msgstr ""

#: ../../../xadmin/views/edit.py:docstring of xadmin.views.ModelFormAdminView.change_form_template:1
# 4bada37b363d452d9dcbd1ef2e89b6b3
msgid "修改页面的模板"
msgstr ""

#: ../../../xadmin/views/edit.py:docstring of xadmin.views.ModelFormAdminView.form_layout:1
# 41dc418940194e07be1d4939b347f70e
msgid "页面 Form 的 Layout 对象，是一个标准的 Crispy Form Layout 对象。使用 Layout 可以方便的定义整个 Form 页面的结构。 有关 Crispy Form 可以参考其文档 `Crispy Form 文档 <http://django-crispy-forms.readthedocs.org/en/latest/layouts.html>`_ 设置 form_layout 的示例::"
msgstr ""

#: ../../../xadmin/views/edit.py:docstring of xadmin.views.ModelFormAdminView.form_layout:27
# 500841174b6a4f7fb2704701e41eab72
msgid "有关 Layout 中元素的信息，可以参看文档 :ref:`form_layout`"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.formfield_for_dbfield:4
# e74ce9c7912a48dfae0f01b1203df973
msgid "生成表单时的回调方法，返回 Form Field。"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.formfield_for_dbfield:6
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.get_field_attrs:6
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.get_field_style:6
# 8496ae0b24fb4e52a7e570c1196b31b6
# 88e6abb3115e4480807c6018b570ecdf
# 649c7ea36c9149359cc8b6f95cb88123
msgid "Model 的 DB Field"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.get:4
# 3bc933a6d0944eb9b64b91d3f4a85e2b
msgid "显示表单。具体的程序执行流程为:"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.get:6
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.post:6
# 6ffa77ff04d9489db97983f72eba15c8
# bce5c19165684728a252ae25261845c8
msgid ":meth:`prepare_form`"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.get:8
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.post:8
# 02c4374780184c908bb16d9d0f6bf33e
# dc3f831d66904e0891654168b4e31956
msgid ":meth:`instance_forms`"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.get:10
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.post:10
# 4f53378a28574eb885c699a0a0f9d478
# 6ef60dbcd54f48aaad1209a06cd225a8
msgid "2.1 :meth:`get_form_datas`"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.get:12
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.post:12
# 8d8740e1e683442abc46be212f96ca3d
# 109afbca015a4a618e7825eb2bd095fe
msgid ":meth:`setup_forms`"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.get:14
# b619e7d6524140819266862bac2ed02b
msgid ":meth:`get_response`"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.get_context:4
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.CreateAdminView.get_context:4
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.UpdateAdminView.get_context:4
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.DeleteAdminView.get_context:4
# 70b58575a03b43bcaf10de3b605eef2f
# 0bf17917a6a64f7bb4a5ee2522e2a032
# 479998eaad68419fb7b9df96be644179
# 54662d27998249eeab17a274f87c0e9b
msgid "**Context Params**:"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.get_context:6
# 8ef10b32a5034a49a78303163f90df9d
msgid "``form`` : Form 对象"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.get_context:8
# 287ddc75c1814d759615eb375931af64
msgid "``original`` : 要修改的原始数据对象"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.get_context:10
# c9d3e4b9bb3a447ea0385adec69e6212
msgid "``show_delete`` : 是否显示删除项"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.get_context:12
# e107b78838764c6b82d54749ed48796b
msgid "``add`` : 是否是添加数据"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.get_context:14
# 0000064c31da411b816b4e31c9fa5002
msgid "``change`` : 是否是修改数据"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.get_context:16
# 4785985fd5364e779bfccdc260414308
msgid "``errors`` : Form 错误信息"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.get_error_list:4
# bf4cf89d324e452bba68a46353b438cc
msgid "获取表单的错误信息列表。"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.get_field_attrs:4
# ee91360ad94940029011d1962f569c9a
msgid "根据 DB Field 返回 Form Field 的属性，dict类型。"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.get_field_style:4
# 81b1c17b1cd04187b65d825342b13daf
msgid "根据 Field Style 返回 Form Field 属性。扩展插件可以过滤该方法，提供各种不同的 Style"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.get_field_style:8
# d78540f6cd9945e2886f47701da3cb19
msgid "配置的 Field Style，该值来自于属性 :attr:`style_fields`"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.get_form_helper:4
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.DetailAdminView.get_form_helper:4
# f20659e436da4e4896e99a364f28efb4
# 05dacd4aa7ba48b992c2656cfbacc175
msgid "取得 Crispy Form 需要的 FormHelper。具体信息可以参看 `Crispy Form 文档 <http://django-crispy-forms.readthedocs.org/en/latest/tags.html#crispy-tag>`_"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.get_form_layout:4
# 782796f64fbb4803a02178cdd86accbe
msgid "返回 Form Layout ，如果您设置了 :attr:`form_layout` 属性，则使用该属性，否则该方法会自动生成 Form Layout 。 有关 Form Layout 的更多信息可以参看 `Crispy Form 文档 <http://django-crispy-forms.readthedocs.org/en/latest/layouts.html>`_ 设置 Form Layout 可以非常灵活的显示表单页面的各个元素"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.get_model_form:4
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.DetailAdminView.get_model_form:4
# 756ff31a2f6548e48127761677f82df1
# 199e213108634a579e25140c6e7655c2
msgid "根据 Model 返回 Form 类，用来显示表单。"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.get_readonly_fields:4
# 8a823ede837345f0b846f81080e19851
msgid "返回只读字段，子类或 OptionClass 可以复写该方法"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.instance_forms:4
# dc58011760ea4d5594786b921254a8c9
msgid "实例化 Form 对象，即使用 :meth:`get_form_datas` 返回的值初始化 Form，实例化的 Form 对象赋值为 :attr:`form_obj` 属性"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.post:4
# 5fc2f198e7bf4948a38ffdf9cebe0d8f
msgid "保存表单数据。具体的程序执行流程为:"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.post:14
# 6ccaac4f5352410d8a3d792f45ca4d90
msgid ":meth:`valid_forms`"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.post:16
# d72f632048bd460e9489340464ce4ced
msgid "4.1 :meth:`save_forms`"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.post:18
# 3354b1213dae4f829e57d9df00ea6264
msgid "4.2 :meth:`save_models`"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.post:20
# fa4bc35c3eb242a59dba8ef0e70241e9
msgid "4.3 :meth:`save_related`"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.post:22
# e4ede768a7fb4dc9b8e760066a38c571
msgid "4.4 :meth:`post_response`"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.prepare_form:4
# 9878d8e860a3439391f83830e635bbd8
msgid "准备 Form，即调用 :meth:`get_model_form` 获取 form ，然后赋值给 :attr:`model_form` 属性"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.save_forms:4
# 595c4c2e1fea49898588c87d3220d8f7
msgid "保存表单，赋值为 :attr:`new_obj` 属性，这时该对象还没有保存到数据库中，也没有 pk 生成"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.save_models:4
# f0706c9784b04aecaeeb6b0d45998870
msgid "保存数据到数据库中"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.save_related:4
# d3c36a6afeac4c1da125396490dfebbd
msgid "保存关联数据"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.setup_forms:1
# 4648af8cea3f4e53aca4287bb2830c44
msgid "配置 Form。主要是"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.ModelFormAdminView.valid_forms:4
# 0354bf65747148548f3a38090fdd72c9
msgid "验证 Form 的数据合法性"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.CreateAdminView:1
# 3a5da8c421594666a60e6eb66545afb3
msgid "创建数据的 ModeAdminView 继承自 :class:`ModelFormAdminView` ，用于创建数据。"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.CreateAdminView.get_context:6
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.UpdateAdminView.get_context:6
# 806d54402f2f436f8e89fa915ed64f5e
# c8ef3cd3f9c8477e8547c9b0c715539e
msgid "``title`` : 表单标题"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.CreateAdminView.get_form_datas:4
# d8c7d75a6be34316a857a71112de9e17
msgid "从 Request 中返回 Form 的初始化数据"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.CreateAdminView.get_response:4
# 7dbd4a30e28747e09958c405d4f0c5c5
msgid "返回显示表单页面的 Response ，子类或是 OptionClass 可以复写该方法"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.CreateAdminView.post_response:4
# 14149f2d7ee640538e2560afbad4eb7c
msgid "当成功保存数据后，会调用该方法返回 HttpResponse 或跳转地址"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.UpdateAdminView:1
# 619fa2054669486093bf0f4d9420fdca
msgid "修改数据的 ModeAdminView 继承自 :class:`ModelFormAdminView` ，用于修改数据。"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.UpdateAdminView.get_context:8
# ce1b22ba2b464f23a5503f42b58f4992
msgid "``object_id`` : 修改的数据对象的 id"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.UpdateAdminView.get_form_datas:4
# 312bc8d9b66d422797231c6ae9688cd4
msgid "获取 Form 数据"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.UpdateAdminView.post_response:4
# c72b3d4ded324b0b86464dbe86ebdb55
msgid "当成功修改数据后，会调用该方法返回 HttpResponse 或跳转地址"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.DeleteAdminView:1
# 9c8a5f7479fe4b8093f2fc9921856fef
msgid "删除 Model 的 AdminView。主要用于删除数据"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.DeleteAdminView:3
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.DetailAdminView:4
# 4c415e40310244d19da5ec9c4f3fe74e
# 1cc10e7a6e024c9cbfdb9f1bbcac6467
msgid "**Option属性**"
msgstr ""

#: ../../../xadmin/views/delete.py:docstring of xadmin.views.DeleteAdminView.delete_confirmation_template:1
# f28f3409a5fa4cff83c4d9d93e8fa19c
msgid "删除时确认删除页面的模板名称"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.DeleteAdminView:11
#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.DetailAdminView:14
# 473eb13924264ec9bcc85e1e0421f8dd
# 449135ce35c1441f9df333a104e146e8
msgid "即将被删除的对象"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.DeleteAdminView.delete_model:4
# 2f21aa6533cd40a39bfed5c0b562f4fb
msgid "删除 ``self.obj``"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.DeleteAdminView.get_context:6
# 6c4342488e264491ac2e62c672cf59e8
msgid "``title`` : 确认删除的标题，如果您没有权限删除的话，会提示无法删除"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.DeleteAdminView.get_context:8
# c92f2639e3884e2f8a83848de0d7b2aa
msgid "``object`` : 要被删除的对象"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.DeleteAdminView.get_context:10
# 56f66403f5084ff9913ab09513deb8dc
msgid "``deleted_objects`` : 关联被删除的所有数据对象"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.DeleteAdminView.get_context:12
# 34d67ef1feee4ebfa6cd75a146320eeb
msgid "``perms_lacking`` : 缺少的权限"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.DeleteAdminView.get_context:14
# 18eb7c5555164653bdb24896be8e3359
msgid "``protected`` : 被保护的数据，无法被删除的数据对象"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.DeleteAdminView.init_request:1
# 8b001d5a011f4fa7b10fcbc78cf09166
msgid "初始化操作。根据传入的 ``object_id`` 取得要被删除的数据对象，而后进行权限判断"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.DeleteAdminView.post_response:4
# 8212ce20aedc4ab09f0be2e95f2b116f
msgid "删除成功后的操作。首先提示用户信息，而后根据用户权限做跳转，如果用户有列表产看权限就跳转到列表页面，否则跳到网站首页。"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.DetailAdminView:1
# 042ef39054714e57ba869c77543c951f
msgid "显示 Model 详细信息的 AdminView. 该 View 页面只能用来查看数据内容, 不能用来修改数据. 该 View 显示各字段的布局跟 :class:`xadmin.views.edit.ModelFormAdminView` 一致."
msgstr ""

#: ../../../xadmin/views/detail.py:docstring of xadmin.views.DetailAdminView.detail_layout:1
# c867f1bb861843bbb171fbd887550740
msgid "详情页面的 Layout 对象，是一个标准的 Crispy Form Layout 对象。使用 Layout 可以方便的定义整个页面的结构。"
msgstr ""

#: ../../../xadmin/views/detail.py:docstring of xadmin.views.DetailAdminView.detail_show_all:1
# 0019f5a704584b6b8a181eced72552ce
msgid "是否显示所有字段的内容, 默认为 ``True`` . 如果为 ``True`` 则会显示 Layout 中没有列出的字段, 否则会隐藏这些字段"
msgstr ""

#: ../../../xadmin/views/detail.py:docstring of xadmin.views.DetailAdminView.detail_template:1
# 0695d8f304f14baba9ce978f0a4e3971
msgid "详情页面的模板文件"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.DetailAdminView.get_context:6
# b81263b95129493bb0d7074ce7036036
msgid "``form`` : 用于显示数据的 Form 对象"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.DetailAdminView.get_context:8
# 6bef482c2952485db370c793405f7dd8
msgid "``object`` : 要显示的 Model 对象"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.DetailAdminView.get_field_result:4
# c96717efb1954873a439fc8fd6fd0105
msgid "返回包含该字段内容的 :class:`ResultField` 实例."
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.DetailAdminView.get_form_layout:4
# f4f0ca2b8e584676932f47a08fbd5223
msgid "返回 Form Layout ，如果您设置了 :attr:`detail_layout` 属性，则使用 :attr:`form_layout` 属性，如果都没有该方法会自动生成 Form Layout 。 有关 Form Layout 的更多信息可以参看 `Crispy Form 文档 <http://django-crispy-forms.readthedocs.org/en/latest/layouts.html>`_ 设置 Form Layout 可以非常灵活的显示页面的各个元素"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.DetailAdminView.get_media:4
# 9316c24811db44c7af28ab0b48987b64
msgid "返回列表页面的 Media, 该页面添加了 ``form.css`` 文件"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.DetailAdminView.get_response:4
# 30285dc824c44ecd8693b385375305f7
msgid "返回 HttpResponse , 插件可以复写该方法返回特定的 HttpResponse"
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.DetailAdminView.init_request:1
# 6d9c4cc08a444fafb24445da570f89f7
msgid "初始化操作。根据传入的 ``object_id`` 取得要被显示的数据对象，而后进行权限判断, 如果没有数据查看权限会显示禁止页面."
msgstr ""

#: ../../../xadmin/views/__init__.py:docstring of xadmin.views.csrf_protect_m:1
# c7e5855cbbe743ee9db05d17870b38b6
msgid "This decorator adds CSRF protection in exactly the same way as CsrfViewMiddleware, but it can be used on a per view basis.  Using both, or using the decorator multiple times, is harmless and efficient."
msgstr ""

