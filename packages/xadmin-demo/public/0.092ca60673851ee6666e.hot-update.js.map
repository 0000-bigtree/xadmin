{"version":3,"sources":["webpack:////Users/tianmiao/workspace/xadmin3/packages/xadmin-form/src/components/base.js"],"names":["FieldGroup","label","meta","input","field","children","groupProps","attrs","error","touched","help","description","size","option","groupSize","sm","md","lg","control","bsSize","bsStyle","controlComponent","name","required","InlineGroup","SimpleGroup"],"mappings":"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","file":"0.092ca60673851ee6666e.hot-update.js","sourcesContent":["import React from 'react'\nimport { FormGroup, ControlLabel, FormControl, Col, HelpBlock } from 'react-bootstrap'\n\nconst FieldGroup = ({ label, meta, input, field, children }) => {\n  const groupProps = {}\n  const attrs = field.attrs || {}\n  const error = meta.touched && meta.error\n  const help = field.description || field.help\n  const size = (field.option && field.option.groupSize) || attrs.groupSize || { \n    label: {\n      sm: 4, md: 3, lg: 2 \n    },\n    control: {\n      sm: 8, md: 9, lg: 10\n    }\n  }\n\n  if (error) {\n    groupProps['validationState'] = 'error'\n  }\n  if (attrs.bsSize) {\n    groupProps['bsSize'] = attrs.bsSize\n  }\n  if (attrs.bsStyle) {\n    groupProps['bsStyle'] = attrs.bsStyle\n  }\n\n  const controlComponent = children ? children : (<FormControl {...input} {...attrs} />)\n  return (\n    <FormGroup controlId={input.name} {...groupProps}>\n      <Col key={0} componentClass={ControlLabel} {...size.label}>\n        {label}{field && field.required ? <span className=\"text-danger\">*</span> : ''}\n      </Col>\n      <Col key={1} {...size.control}>\n        {controlComponent}\n        <FormControl.Feedback />\n        {help && <HelpBlock>{help}</HelpBlock>}\n        {error && <HelpBlock>{error}</HelpBlock>}\n      </Col>\n    </FormGroup>\n    )\n}\n\nconst InlineGroup = ({ label, meta, input, field, children }) => {\n  const groupProps = {}\n  const attrs = field.attrs || {}\n  const error = meta.touched && meta.error\n  const help = field.description || field.help\n\n  if (error) {\n    groupProps['validationState'] = 'error'\n  }\n  if (attrs.bsSize) {\n    groupProps['bsSize'] = attrs.bsSize\n  }\n  if (attrs.bsStyle) {\n    groupProps['bsStyle'] = attrs.bsStyle\n  }\n\n  const controlComponent = children ? children : (<FormControl {...input} {...attrs} placeholder={label} />)\n  return (\n    <FormGroup controlId={input.name} {...groupProps}>\n      <Col sm={12}>\n        {controlComponent}\n        {help && <HelpBlock>{help}</HelpBlock>}\n        {error && <HelpBlock>{error}</HelpBlock>}\n      </Col>\n    </FormGroup>\n    )\n}\n\nconst SimpleGroup = ({ label, meta, input, field, children }) => {\n  const groupProps = {}\n  const attrs = field.attrs || {}\n  const error = meta.touched && meta.error\n  const help = field.description || field.help\n\n  if (error) {\n    groupProps['validationState'] = 'error'\n  }\n  if (attrs.bsSize) {\n    groupProps['bsSize'] = attrs.bsSize\n  }\n  if (attrs.bsStyle) {\n    groupProps['bsStyle'] = attrs.bsStyle\n  }\n\n  const controlComponent = children ? children : (<FormControl {...input} {...attrs} placeholder={label} />)\n  return (\n    <FormGroup controlId={input.name} {...groupProps}>\n      <ControlLabel>{label}{field && field.required ? <span className=\"text-danger\">*</span> : ''}</ControlLabel>\n      {controlComponent}\n      {help && <HelpBlock>{help}</HelpBlock>}\n      {error && <HelpBlock>{error}</HelpBlock>}\n    </FormGroup>\n    )\n}\n\nexport {\n  FieldGroup,\n  InlineGroup,\n  SimpleGroup\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/tianmiao/workspace/xadmin3/packages/xadmin-form/src/components/base.js"],"sourceRoot":""}