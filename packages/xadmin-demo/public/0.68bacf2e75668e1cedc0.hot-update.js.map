{"version":3,"sources":["webpack:////Users/tianmiao/workspace/xadmin3/packages/xadmin-form/src/builder.js"],"names":["defaultUIRender","fields","option","map","fieldBuilder","field","objectBuilder","render","fields_defined","load_dict","fields_wraped","filter","type","undefined","props","key","name","label","normalize","parse","format","component","group","prefixFieldKey","prefix","f","length","cf"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,kBAAkB,SAAlBA,eAAkB,CAACC,MAAD,EAASC,MAAT,EAAoB;AAC1C,SAAOD,OAAOE,GAAP,CAAW;AAAA,WAASC,aAAaC,KAAb,EAAoBH,MAApB,CAAT;AAAA,GAAX,CAAP;AACD,CAFD;;AAIA,IAAMI,gBAAgB,SAAhBA,aAAgB,CAACL,MAAD,EAASM,MAAT,EAAiBL,MAAjB,EAA4B;AAChD,MAAMM,iBAAiB,gBAAIC,SAAJ,CAAc,aAAd,CAAvB;AACA,MAAMC,gBAAgBT,OACnBU,MADmB,CACZ;AAAA,WAASN,MAAMO,IAAN,KAAeC,SAAf,IAA4BL,eAAeH,MAAMO,IAArB,MAA+BC,SAApE;AAAA,GADY,EAEnBV,GAFmB,CAEf,iBAAS;AAAE,sCAAYK,eAAeH,MAAMO,IAAN,IAAc,MAA7B,CAAZ,EAAqDP,KAArD,IAA4DH,cAA5D;AAAsE,GAFlE,CAAtB;;AAIA,SAAO,CAACK,UAAUP,eAAX,EAA4BU,aAA5B,EAA2CR,MAA3C,CAAP;AACD,CAPD;;AASA,IAAME,eAAe,SAAfA,YAAe,CAACC,KAAD,EAAQH,MAAR,EAA6B;AAAA,oCAAVY,KAAU;AAAVA,SAAU;AAAA;;AAChD,SAAQ,yEAAO,KAAKT,MAAMU,GAAlB,EAAuB,MAAMV,MAAMW,IAAnC,EAAyC,OAAOX,MAAMY,KAAtD;AACN,eAAWZ,MAAMa,SADX,EACsB,OAAOb,MAAMc,KADnC,EAC0C,QAAQd,MAAMe,MADxD;AAEN,eAAWf,MAAMgB,SAFX,EAEsB,OAAOhB,KAF7B;AAGN,WAAOA,MAAMiB,KAAN,KAAgBpB,UAAUA,OAAOoB,KAAjB,GAAyBpB,OAAOoB,KAAhC,mBAAhB,CAHD;AAIN,YAAQpB;AAJF,KAKFY,KALE,EAAR;AAMD,CAPD;;AASA,IAAMS,iBAAiB,SAAjBA,cAAiB,CAAClB,KAAD,EAAQmB,MAAR,EAAmB;AACxC,MAAMC,+BAASpB,KAAT,IAAgBU,KAAKS,SAASnB,MAAMU,GAApC,EAAyCC,MAAMQ,SAASnB,MAAMW,IAA9D,GAAN;AACA,MAAGX,MAAMJ,MAAN,IAAgBI,MAAMJ,MAAN,CAAayB,MAAb,GAAsB,CAAzC,EAA4C;AAC1CD,MAAExB,MAAF,GAAWI,MAAMJ,MAAN,CAAaE,GAAb,CAAiB;AAAA,aAAMoB,eAAeI,EAAf,EAAmBH,MAAnB,CAAN;AAAA,KAAjB,CAAX;AACD;AACD,SAAOC,CAAP;AACD,CAND;;QASEzB,e,GAAAA,e;QACAM,a,GAAAA,a;QACAF,Y,GAAAA,Y;QACAmB,c,GAAAA,c","file":"0.68bacf2e75668e1cedc0.hot-update.js","sourcesContent":["import React from 'react'\nimport { Field, reduxForm, reducer as formReducer } from 'redux-form'\nimport { app, StoreWrap } from 'xadmin-core'\nimport { FieldGroup } from './components/base'\n\nconst defaultUIRender = (fields, option) => {\n  return fields.map(field => fieldBuilder(field, option))\n}\n\nconst objectBuilder = (fields, render, option) => {\n  const fields_defined = app.load_dict('form_fields')\n  const fields_wraped = fields\n    .filter(field => field.type === undefined || fields_defined[field.type] !== undefined)\n    .map(field => { return { ...fields_defined[field.type || 'text'], ...field, option } })\n\n  return (render || defaultUIRender)(fields_wraped, option)\n}\n\nconst fieldBuilder = (field, option, ...props) => {\n  return (<Field key={field.key} name={field.name} label={field.label} \n    normalize={field.normalize} parse={field.parse} format={field.format}\n    component={field.component} field={field} \n    group={field.group || (option && option.group ? option.group : FieldGroup)} \n    option={option}\n    {...props} />)\n}\n\nconst prefixFieldKey = (field, prefix) => {\n  const f = { ...field, key: prefix + field.key, name: prefix + field.name }\n  if(field.fields && field.fields.length > 0) {\n    f.fields = field.fields.map(cf => prefixFieldKey(cf, prefix))\n  }\n  return f\n}\n\nexport {\n  defaultUIRender,\n  objectBuilder,\n  fieldBuilder,\n  prefixFieldKey\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/tianmiao/workspace/xadmin3/packages/xadmin-form/src/builder.js"],"sourceRoot":""}