{"version":3,"sources":["webpack:////Users/tianmiao/workspace/xadmin3/packages/xadmin-form/src/base.js"],"names":["ajv","allErrors","v5","verbose","BaseForm","props","fields","render","option","component","handleSubmit","formProps","build_fields","FormComponent","validateByFields","errors","values","forEach","isFunction","field","validate","name","err","get","isArray","Form","formKey","WrapForm","form","SchemaForm","schema","ajValidate","compile","valid","omitBy","v","undefined","i18n","context","language","reduce","prev","dataPath","length","substr","message","keyword","params","missingProperty","FormWrap","contextTypes","_reduxForm","PropTypes","object","isRequired","getState","store","formState","getFormState","fieldBuilder","objectBuilder","schemaConvert"],"mappings":"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","file":"0.792b6ca51889e0ddd0ab.hot-update.js","sourcesContent":["import React from 'react'\nimport { Field, reducer as formReducer, reduxForm } from 'redux-form'\nimport { StoreWrap, app } from 'xadmin-core'\nimport { fieldBuilder, objectBuilder } from './builder'\n\nimport Ajv from 'ajv'\nimport _ from 'lodash'\nimport ajvLocalize from './locales'\nimport { convert as schemaConvert } from './schema'\n\nconst ajv = new Ajv({ allErrors: true, v5: true, verbose: true })\n\nconst BaseForm = (props) => {\n  const { fields, render, option, component, handleSubmit, ...formProps } = props\n  const build_fields = objectBuilder(fields, render, { ...option, ...formProps })\n  if(component) {\n    const FormComponent = component\n    return <FormComponent {...props} >{build_fields}</FormComponent>\n  } else {\n    return (\n      <form className=\"form-horizontal\" onSubmit={handleSubmit}>{build_fields}</form>\n    )\n  }\n}\n\nconst validateByFields = (errors, values, fields) => {\n  fields.forEach(field => {\n    if(_.isFunction(field.validate)) {\n      const name = field.name\n      const err = field.validate(_.get(values, field.name) || null, values)\n      if(_.isArray(err)) {\n        errors[name] = [ ...(errors[name] || []), ...err ]\n      } else if(err) {\n        errors[name] = [ ...(errors[name] || []), err ]\n      }\n    }\n  })\n  return errors\n}\n\nconst Form = (props) => {\n  const { formKey, validate, fields } = props\n  const WrapForm = reduxForm({ \n    form: formKey,\n    validate: (values) => {\n      let errors = validate ? validate(values) : {}\n      return validateByFields(errors, values, fields)\n    }\n  })(BaseForm)\n  return <WrapForm {...props}/>\n}\n\nconst SchemaForm = (props) => {\n  const { formKey, schema } = props\n  const ajValidate = ajv.compile(schema)\n  const fields = schemaConvert(schema).fields\n  \n  const WrapForm = reduxForm({ \n    form: formKey,\n    validate: (values) => {\n      const valid = ajValidate(_.omitBy(values, v=> v == null || v === undefined || v === ''))\n      if(!valid) {\n        const { i18n } = app.context\n        if(ajvLocalize[i18n.language]) {\n          ajvLocalize[i18n.language](ajValidate.errors)\n        }\n      }\n      let errors = valid ? {} : ajValidate.errors.reduce((prev, err) => {\n        if(err.dataPath.length > 1) {\n          prev[err.dataPath.substr(1)] = err.message\n        } else if(err.dataPath == '' && err.keyword == 'required') {\n          prev[err.params.missingProperty] = err.message\n        }\n        return prev\n      }, {})\n      errors = validateByFields(errors, values, fields)\n      return errors\n    }\n  })(BaseForm)\n  return <WrapForm fields={fields} {...props}/>\n}\n\nconst FormWrap = StoreWrap({\n  contextTypes: {\n    _reduxForm: React.PropTypes.object.isRequired\n  },\n  getState: (context) => {\n    const { store, _reduxForm } = context\n    return { form: _reduxForm, formState: _reduxForm.getFormState(store.getState()) }\n  }\n})\n\nexport {\n  BaseForm,\n  Form,\n  SchemaForm,\n  FormWrap,\n  fieldBuilder,\n  objectBuilder,\n  schemaConvert\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/tianmiao/workspace/xadmin3/packages/xadmin-form/src/base.js"],"sourceRoot":""}