{"version":3,"sources":["webpack:////Users/tianmiao/workspace/xadmin3/packages/xadmin-form/src/fields.js"],"names":["console","log","text","component","Text","number","normalize","value","previousValue","ret","parseFloat","Number","isNaN","attrs","type","style","maxWidth","integer","parseInt","select","Select","numselect","date","DateTime","format","dateFormat","timeFormat","valueFormat","time","viewMode","datetime","bool","Checkbox","Boolean","checkbox","fieldset","Fieldset","array","ArrayWidget"],"mappings":";;;;;;;;;;;;AAAA;;;;;;AACAA,QAAQC,GAAR;kBACe;AACbC,QAAM;AACJC,eAAW,qBAAQC;AADf,GADO;AAIbC,UAAQ;AACNF,eAAW,qBAAQC,IADb;AAENE,eAAW,mBAACC,KAAD,EAAQC,aAAR,EAA0B;AACnC,UAAMC,MAAMC,WAAWH,KAAX,CAAZ;AACA,aAAOI,OAAOC,KAAP,CAAaH,GAAb,IAAoBF,KAApB,GAA4BE,GAAnC;AACD,KALK;AAMNI,WAAO;AACLC,YAAM,QADD;AAELC,aAAO,EAAEC,UAAU,GAAZ;AAFF;AAND,GAJK;AAebC,WAAS;AACPd,eAAW,qBAAQC,IADZ;AAEPE,eAAW,mBAACC,KAAD,EAAQC,aAAR,EAA0B;AACnC,UAAMC,MAAMS,SAASX,KAAT,CAAZ;AACA,aAAOI,OAAOC,KAAP,CAAaH,GAAb,IAAoBF,KAApB,GAA4BE,GAAnC;AACD,KALM;AAMPI,WAAO;AACLC,YAAM,QADD;AAELC,aAAO,EAAEC,UAAU,GAAZ;AAFF;AANA,GAfI;AA0BbG,UAAQ;AACNhB,eAAW,qBAAQiB;AADb,GA1BK;AA6BbC,aAAW;AACTlB,eAAW,qBAAQiB,MADV;AAETd,eAAW,mBAACC,KAAD,EAAQC,aAAR,EAA0B;AACnC,UAAMC,MAAMC,WAAWH,KAAX,CAAZ;AACA,aAAOI,OAAOC,KAAP,CAAaH,GAAb,IAAoBF,KAApB,GAA4BE,GAAnC;AACD;AALQ,GA7BE;AAoCba,QAAM;AACJnB,eAAW,qBAAQoB,QADf;AAEJjB,eAAW,mBAACC,KAAD,EAAQC,aAAR,EAA0B;AACnC,aAAQD,SAASA,MAAMiB,MAAhB,GAA0BjB,MAAMiB,MAAN,CAAa,YAAb,CAA1B,GAAuDjB,SAASC,aAAvE;AACD,KAJG;AAKJK,WAAO;AACLY,kBAAY,IADP;AAELC,kBAAY,KAFP;AAGLC,mBAAa;AAHR;AALH,GApCO;AA+CbC,QAAM;AACJzB,eAAW,qBAAQoB,QADf;AAEJjB,eAAW,mBAACC,KAAD,EAAQC,aAAR,EAA0B;AACnC,aAAQD,SAASA,MAAMiB,MAAhB,GAA0BjB,MAAMiB,MAAN,CAAa,UAAb,CAA1B,GAAqDjB,SAASC,aAArE;AACD,KAJG;AAKJK,WAAO;AACLY,kBAAY,KADP;AAELC,kBAAY,IAFP;AAGLG,gBAAU,MAHL;AAILF,mBAAa;AAJR;AALH,GA/CO;AA2DbG,YAAU;AACR3B,eAAW,qBAAQoB,QADX;AAERjB,eAAW,mBAACC,KAAD,EAAQC,aAAR,EAA0B;AACnC,aAAQD,SAASA,MAAMiB,MAAhB,GAA0BjB,MAAMiB,MAAN,CAAa,qBAAb,CAA1B,GAAgEjB,SAASC,aAAhF;AACD,KAJO;AAKRK,WAAO;AACLY,kBAAY,IADP;AAELC,kBAAY,IAFP;AAGLC,mBAAa;AAHR;AALC,GA3DG;AAsEbI,QAAM;AACJ5B,eAAW,qBAAQ6B,QADf;AAEJ1B,eAAW,mBAACC,KAAD,EAAQC,aAAR,EAA0B;AACnC,aAAOyB,QAAQ1B,KAAR,CAAP;AACD;AAJG,GAtEO;AA4Eb2B,YAAU;AACR/B,eAAW,qBAAQ6B;AADX,GA5EG;AA+EbG,YAAU;AACRhC,eAAW,qBAAQiC;AADX,GA/EG;AAkFbC,SAAO;AACLlC,eAAW,qBAAQmC;AADd;AAlFM,C","file":"0.7e7613fe6da7b225ca46.hot-update.js","sourcesContent":["import widgets from './components'\nconsole.log(widgets)\nexport default {\n  text: {\n    component: widgets.Text\n  },\n  number: {\n    component: widgets.Text,\n    normalize: (value, previousValue) => {\n      const ret = parseFloat(value)\n      return Number.isNaN(ret) ? value : ret\n    },\n    attrs: {\n      type: 'number',\n      style: { maxWidth: 200 }\n    }\n  },\n  integer: {\n    component: widgets.Text,\n    normalize: (value, previousValue) => {\n      const ret = parseInt(value)\n      return Number.isNaN(ret) ? value : ret\n    },\n    attrs: {\n      type: 'number',\n      style: { maxWidth: 200 }\n    }\n  },\n  select: {\n    component: widgets.Select\n  },\n  numselect: {\n    component: widgets.Select,\n    normalize: (value, previousValue) => {\n      const ret = parseFloat(value)\n      return Number.isNaN(ret) ? value : ret\n    }\n  },\n  date: {\n    component: widgets.DateTime,\n    normalize: (value, previousValue) => {\n      return (value && value.format) ? value.format('YYYY-MM-DD') : value || previousValue\n    },\n    attrs: {\n      dateFormat: true,\n      timeFormat: false,\n      valueFormat: 'L'\n    }\n  },\n  time: {\n    component: widgets.DateTime,\n    normalize: (value, previousValue) => {\n      return (value && value.format) ? value.format('HH:mm:ss') : value || previousValue\n    },\n    attrs: {\n      dateFormat: false,\n      timeFormat: true,\n      viewMode: 'time',\n      valueFormat: 'LT'\n    }\n  },\n  datetime: {\n    component: widgets.DateTime,\n    normalize: (value, previousValue) => {\n      return (value && value.format) ? value.format('YYYY-MM-DD HH:mm:ss') : value || previousValue\n    },\n    attrs: {\n      dateFormat: true,\n      timeFormat: true,\n      valueFormat: 'L LT'\n    }\n  },\n  bool: {\n    component: widgets.Checkbox,\n    normalize: (value, previousValue) => {\n      return Boolean(value)\n    }\n  },\n  checkbox: {\n    component: widgets.Checkbox\n  },\n  fieldset: {\n    component: widgets.Fieldset\n  },\n  array: {\n    component: widgets.ArrayWidget\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/tianmiao/workspace/xadmin3/packages/xadmin-form/src/fields.js"],"sourceRoot":""}