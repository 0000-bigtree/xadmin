{"version":3,"sources":["webpack:////Users/tianmiao/workspace/xadmin3/packages/xadmin-form/src/components/Array.js"],"names":["defaultItemsRender","fields","meta","touched","error","field","fieldsBuilder","items","label","push","map","name","index","removeBtn","remove","float","itemLable","fieldsComponent","length","input","option","renderItems","itemsRender","load_dict","itemFields","f","key","render"],"mappings":"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","file":"0.a76dd4a7d8b2000dc62d.hot-update.js","sourcesContent":["import React from 'react'\nimport { FieldArray } from 'redux-form'\nimport { FieldGroup } from './base'\nimport { Panel, Button, PanelGroup } from 'react-bootstrap'\nimport { objectBuilder, prefixFieldKey } from '../builder'\nimport Icon from 'react-fontawesome'\nimport app from 'xadmin-core'\n\nconst defaultItemsRender = ({ fields, meta: { touched, error }, field, fieldsBuilder }) => {\n  const { items, label } = field\n  return (\n    <div>\n      <h5>{label}{' '}\n      <Button bsSize=\"xsmall\" onClick={() => fields.push()}><Icon name=\"plus\"/></Button></h5>\n      <PanelGroup accordion>\n        {fields.map((name, index) => {\n          const removeBtn = (<Button bsSize=\"xsmall\" onClick={() => fields.remove(index)} style={{ float: 'right' }}><Icon name=\"minus\"/></Button>)\n          const itemLable = (<h6>{label + ' ' + (index + 1)}{removeBtn}</h6>)\n          const fieldsComponent = fieldsBuilder(name, index, removeBtn)\n          return fieldsComponent.length > 1 ? (\n            <Panel header={itemLable} eventKey={index} key={`items${index}`}>\n            {fieldsComponent}\n            </Panel>\n          ) : (\n            <div>{fieldsComponent}</div>\n          )\n        })}\n      </PanelGroup>\n      {(touched && error) ? error : null}\n    </div>\n  )\n}\n\nexport default ({ input, label, meta: { touched, error }, field, option }) => {\n  let renderItems = field.itemsRender || defaultItemsRender\n  if(typeof renderItems === 'string') {\n    renderItems = app.load_dict('array_render')[renderItems]\n  }\n  const { items } = field\n  const fieldsBuilder = (name, index, removeBtn, itemLable) => {\n    const label = itemLable || (<div>{removeBtn ? removeBtn : ''}{label + ' ' + (index + 1)}</div>)\n    const itemFields = items.fields ? \n      (items.fields.map(f => prefixFieldKey(f, name + '.'))) : \n      [ { ...items, key: name, name: name, label } ]\n\n    return objectBuilder(itemFields, items.render, option)\n  }\n  return <FieldArray name={field.name} label={label} component={renderItems} field={field} fieldsBuilder={fieldsBuilder} />\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/tianmiao/workspace/xadmin3/packages/xadmin-form/src/components/Array.js"],"sourceRoot":""}