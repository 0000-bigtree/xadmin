{"version":3,"sources":["webpack:////Users/tianmiao/workspace/xadmin3/packages/xadmin-form/src/schema.js"],"names":["stripNullType","type","Array","isArray","length","enumToTitleMap","enm","title","titleMap","forEach","name","index","push","undefined","value","canonicalTitleMap","originalEnum","canonical","k","hasOwnProperty","convert","schema","options","opts","path","lookup","load_list","convert_key","reduce","prve","converter","global","formDefaults","cloneDeep","converters","f","readonly","required","fieldKey","key","join","label","startCase","indexOf","description","maxLength","maxlength","minLength","minlength","minimum","exclusiveMinimum","maximum","exclusiveMaximum","validationMessage","enumNames","props","properties","ignore","form","ret","field","keys","idx","slice","concat","Object","filter","pk","fields","map","merge","render","form_render","items","itemsRender","schema_type","format"],"mappings":"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","file":"0.afed6e04c5ef4774ffc5.hot-update.js","sourcesContent":["import _ from 'lodash'\nimport { app } from 'xadmin-core'\n\nconst stripNullType = (type) => {\n  if(Array.isArray(type) && type.length == 2) {\n    if (type[0] === 'null')\n      return type[1]\n    if (type[1] === 'null')\n      return type[0]\n  }\n  return type\n}\n\nconst enumToTitleMap = (enm, title) => {\n  let titleMap = []\n  enm.forEach((name, index) => {\n    titleMap.push({ name: \n      title != undefined ? (( _.isArray(title) ? title[index] : title[name] )  || name) : name, value: name })\n  })\n  return titleMap\n}\n\nconst canonicalTitleMap = (titleMap, originalEnum) => {\n  if(!_.isArray(titleMap)) {\n    let canonical = []\n    if (originalEnum) {\n      originalEnum.forEach(value => {\n        canonical.push({ name: titleMap[value], value: value })\n      })\n    } else {\n      for(let k in titleMap) {\n        if (titleMap.hasOwnProperty(k)) {\n          canonical.push({ name: k, value: titleMap[k] })\n        }\n      }\n    }\n    return canonical\n  }\n  return titleMap\n}\n\nconst convert = (schema, options) => {\n  const opts = options || {}\n  if(opts.path === undefined) {\n    opts.path = []\n  }\n  if(opts.lookup === undefined) {\n    opts.lookup = {}\n  }\n  return app.load_list(opts.convert_key || 'schema_converter').reduce((prve, converter) => {\n    return converter(prve, schema, opts)\n  }, opts.global && opts.global.formDefaults ? _.cloneDeep(opts.global.formDefaults) : {})\n}\n\nconst converters = [\n  // all form field\n  (f, schema, options) => {\n    const { path, readonly, required, lookup } = options\n\n    const fieldKey = path.length > 0 ? path[path.length - 1] : undefined\n    f.key = path.join('.')\n\n    f.name = f.key\n    f.label = schema.title || _.startCase(fieldKey)\n\n    if(fieldKey !== undefined) {\n      if (readonly && readonly.indexOf(fieldKey) !== -1) { f.readonly  = true }\n      if (required && required.indexOf(fieldKey) !== -1) { f.required  = true }\n    }\n\n    if (schema.description) { f.description = schema.description }\n    if (schema.maxLength) { f.maxlength = schema.maxLength }\n    if (schema.minLength) { f.minlength = schema.minLength }\n    if (schema.minimum) { f.minimum = schema.minimum + (schema.exclusiveMinimum ? 1 : 0) }\n    if (schema.maximum) { f.maximum = schema.maximum - (schema.exclusiveMaximum ? 1 : 0) }\n\n    if (schema.validationMessage) { f.validationMessage = schema.validationMessage }\n    if (schema.enumNames) { f.titleMap = canonicalTitleMap(schema.enumNames, schema['enum']) }\n\n    f.schema = schema\n    lookup[f.key] = f\n\n    return f\n  },\n  // object\n  (f, schema, options) => {\n    if(stripNullType(schema.type) === 'object') {\n      f.type = 'fieldset'\n\n      const props = schema.properties\n      const opts = { ...options }\n\n      opts.required = schema.required || []\n      opts.readonly = schema.readonly || []\n      opts.ignore = schema.ignore || []\n\n      let { keys, form } = (schema.form || [ '*' ]).reduce((ret, field) => {\n        if(typeof field === 'string') {\n          if(field != '*' || ret.keys.indexOf('*') == -1) {\n            ret.keys.push(field)\n          }\n          if(field != '*') {\n            ret.form[field] = { key: field }\n          }\n        } else if( field.key !== undefined) {\n          ret.keys.push(field.key)\n          ret.form[field.key] = field\n        }\n        return ret\n      }, { keys: [], form: {} })\n\n      const idx = keys.indexOf('*')\n\n      if(idx !== -1) {\n        keys = keys.slice(0, idx)\n          .concat(Object.keys(props).filter(pk => keys.indexOf(pk) == -1))\n          .concat(keys.slice(idx + 1))\n      }\n\n      const fields = keys.filter(key => opts.ignore.indexOf(key) === -1).map(key => {\n        opts.path = [ ...options.path, key ]\n        return props[key] !== undefined ? _.merge(convert(props[key], opts), form[key] || {}) : form[key]\n      })\n\n      f.render = schema.form_render\n      f.fields = fields\n    }\n    return f\n  },\n  // array\n  (f, schema, options) => {\n    if(stripNullType(schema.type) === 'array') {\n      f.type = 'array'\n\n      if(typeof schema.items !== 'undefined') {\n        f.items = convert(schema.items, { ...options, path: [] })\n      }\n      if(schema.itemsRender)\n        f.itemsRender = schema.itemsRender\n    }\n    return f\n  },\n  // all normal type form field\n  (f, schema, options) => {\n    if(f.type !== undefined) {\n      return f\n    }\n    const schema_type = stripNullType(schema.type)\n    if(schema_type === 'string') {\n      if(!schema['enum']) {\n        f.type = 'text'\n      } else {\n        f.type = 'select'\n        if (!f.titleMap) {\n          f.titleMap = enumToTitleMap(schema['enum'], schema['enum_title'] || {})\n        }\n      }\n      switch(schema.format) {\n        case 'date':\n          f.type = 'date'\n          break\n        case 'time':\n          f.type = 'time'\n          break\n        case 'datetime':\n          f.type = 'datetime'\n          break\n      }\n    } else if(schema_type === 'number') {\n      if(!schema['enum']) {\n        f.type = 'number'\n      } else {\n        f.type = 'numselect'\n        if (!f.titleMap) {\n          f.titleMap = enumToTitleMap(schema['enum'], schema['enum_title'] || {})\n        }\n      }\n    } else if(schema_type === 'integer') {\n      if(!schema['enum']) {\n        f.type = 'integer'\n      } else {\n        f.type = 'numselect'\n        if (!f.titleMap) {\n          f.titleMap = enumToTitleMap(schema['enum'], schema['enum_title'] || {})\n        }\n      }\n    } else if(schema_type === 'boolean') {\n      f.type = 'checkbox'\n    }\n    return f\n  }\n]\n\nexport {\n  convert,\n  converters\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/tianmiao/workspace/xadmin3/packages/xadmin-form/src/schema.js"],"sourceRoot":""}